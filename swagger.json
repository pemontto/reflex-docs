{
    "swagger": "2.0",
    "basePath": "/api/v2.0",
    "paths": {
        "/agent": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/AgentListPaged"
                            }
                        }
                    }
                },
                "summary": "Returns a list of Agents",
                "operationId": "get_agent_list",
                "parameters": [
                    {
                        "name": "organization",
                        "in": "query",
                        "type": "string"
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "type": "integer",
                        "default": 1
                    },
                    {
                        "name": "page_size",
                        "in": "query",
                        "type": "integer",
                        "default": 10
                    },
                    {
                        "name": "sort_by",
                        "in": "query",
                        "type": "string",
                        "default": "created_at"
                    },
                    {
                        "name": "sort_direction",
                        "in": "query",
                        "type": "string",
                        "default": "desc"
                    },
                    {
                        "name": "X-Fields",
                        "in": "header",
                        "type": "string",
                        "format": "mask",
                        "description": "An optional fields mask"
                    }
                ],
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "tags": [
                    "Agent"
                ]
            },
            "post": {
                "responses": {
                    "200": {
                        "description": "Successfully created the agent."
                    },
                    "409": {
                        "description": "Agent already exists."
                    }
                },
                "summary": "Creates a new Agent",
                "operationId": "post_agent_list",
                "parameters": [
                    {
                        "name": "payload",
                        "required": true,
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/AgentCreate"
                        }
                    }
                ],
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "tags": [
                    "Agent"
                ]
            }
        },
        "/agent/heartbeat/{uuid}": {
            "parameters": [
                {
                    "name": "uuid",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ],
            "get": {
                "responses": {
                    "200": {
                        "description": "Success"
                    }
                },
                "operationId": "get_agent_heartbeat",
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "tags": [
                    "Agent"
                ]
            }
        },
        "/agent/pair_token": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Success"
                    }
                },
                "summary": "Generates a short lived pairing token used by the agent to get a long running JWT",
                "operationId": "get_agent_pair_token",
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "tags": [
                    "Agent"
                ]
            }
        },
        "/agent/{uuid}": {
            "parameters": [
                {
                    "name": "uuid",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ],
            "get": {
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/AgentList"
                        }
                    }
                },
                "summary": "Gets the details of a Agent",
                "operationId": "get_agent_details",
                "parameters": [
                    {
                        "name": "X-Fields",
                        "in": "header",
                        "type": "string",
                        "format": "mask",
                        "description": "An optional fields mask"
                    }
                ],
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "tags": [
                    "Agent"
                ]
            },
            "delete": {
                "responses": {
                    "200": {
                        "description": "Success"
                    }
                },
                "summary": "Removes a Agent",
                "operationId": "delete_agent_details",
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "tags": [
                    "Agent"
                ]
            },
            "put": {
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/AgentList"
                        }
                    }
                },
                "summary": "Updates an Agent",
                "operationId": "put_agent_details",
                "parameters": [
                    {
                        "name": "payload",
                        "required": true,
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/AgentCreate"
                        }
                    },
                    {
                        "name": "X-Fields",
                        "in": "header",
                        "type": "string",
                        "format": "mask",
                        "description": "An optional fields mask"
                    }
                ],
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "tags": [
                    "Agent"
                ]
            }
        },
        "/agent_group": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/PagedAgentGroupList"
                        }
                    }
                },
                "operationId": "get_agent_group_list",
                "parameters": [
                    {
                        "name": "payload",
                        "required": true,
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/AgentGroupListPaged"
                        }
                    },
                    {
                        "name": "X-Fields",
                        "in": "header",
                        "type": "string",
                        "format": "mask",
                        "description": "An optional fields mask"
                    }
                ],
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "tags": [
                    "AgentGroup"
                ]
            },
            "post": {
                "responses": {
                    "409": {
                        "description": "Agent group already exists."
                    },
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/AgentGroupList"
                        }
                    }
                },
                "summary": "Creates a new agent group that can be used to assign ",
                "description": "certain stack features to specific agents",
                "operationId": "post_agent_group_list",
                "parameters": [
                    {
                        "name": "payload",
                        "required": true,
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/AgentGroupList"
                        }
                    },
                    {
                        "name": "X-Fields",
                        "in": "header",
                        "type": "string",
                        "format": "mask",
                        "description": "An optional fields mask"
                    }
                ],
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "tags": [
                    "AgentGroup"
                ]
            }
        },
        "/agent_group/{uuid}": {
            "parameters": [
                {
                    "name": "uuid",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ],
            "get": {
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/AgentGroupList"
                        }
                    }
                },
                "operationId": "get_agent_group_details",
                "parameters": [
                    {
                        "name": "X-Fields",
                        "in": "header",
                        "type": "string",
                        "format": "mask",
                        "description": "An optional fields mask"
                    }
                ],
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "tags": [
                    "AgentGroup"
                ]
            },
            "delete": {
                "responses": {
                    "200": {
                        "description": "Success"
                    }
                },
                "operationId": "delete_agent_group_details",
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "tags": [
                    "AgentGroup"
                ]
            },
            "put": {
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/AgentGroupList"
                        }
                    }
                },
                "operationId": "put_agent_group_details",
                "parameters": [
                    {
                        "name": "payload",
                        "required": true,
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/AgentGroupList"
                        }
                    },
                    {
                        "name": "X-Fields",
                        "in": "header",
                        "type": "string",
                        "format": "mask",
                        "description": "An optional fields mask"
                    }
                ],
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "tags": [
                    "AgentGroup"
                ]
            }
        },
        "/audit_log": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/AuditLogPagedList"
                        }
                    }
                },
                "summary": "Returns a paginated collection of audit logs",
                "operationId": "get_audit_logs_list",
                "parameters": [
                    {
                        "name": "event_type",
                        "in": "query",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv"
                    },
                    {
                        "name": "status",
                        "in": "query",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv"
                    },
                    {
                        "name": "source_user",
                        "in": "query",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv"
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "type": "integer",
                        "default": 1
                    },
                    {
                        "name": "sort_by",
                        "in": "query",
                        "type": "string",
                        "default": "created_at"
                    },
                    {
                        "name": "X-Fields",
                        "in": "header",
                        "type": "string",
                        "format": "mask",
                        "description": "An optional fields mask"
                    }
                ],
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "tags": [
                    "AuditLog"
                ]
            }
        },
        "/auth/login": {
            "post": {
                "responses": {
                    "401": {
                        "description": "Incorrect username or password"
                    },
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/AuthSuccessToken"
                        }
                    }
                },
                "summary": "Log a user in to the platform and provide them with an access_token a refresh_token",
                "operationId": "post_login",
                "parameters": [
                    {
                        "name": "payload",
                        "required": true,
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/AuthModel"
                        }
                    }
                ],
                "tags": [
                    "Auth"
                ]
            }
        },
        "/auth/logout": {
            "get": {
                "responses": {
                    "401": {
                        "description": "Not logged in."
                    },
                    "200": {
                        "description": "Successfully logged out."
                    }
                },
                "summary": "Logs a user out of the platform and invalidates their access_token",
                "description": "so that they can't use it again.  The token is stored in a blocked token\nindex for lookup when calling the API",
                "operationId": "get_logout",
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "tags": [
                    "Auth"
                ]
            }
        },
        "/auth/mfa": {
            "post": {
                "responses": {
                    "401": {
                        "description": "Incorrect token"
                    },
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/AuthSuccessToken"
                        }
                    }
                },
                "summary": "Check the users challenge against their TOTP",
                "operationId": "post_multi_factor",
                "parameters": [
                    {
                        "name": "payload",
                        "required": true,
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/MFAChallenge"
                        }
                    }
                ],
                "tags": [
                    "Auth"
                ]
            }
        },
        "/case": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/PagedCaseList"
                        }
                    }
                },
                "summary": "Returns a list of case",
                "operationId": "get_case_list",
                "parameters": [
                    {
                        "name": "page_size",
                        "in": "query",
                        "type": "integer",
                        "default": 25
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "type": "integer",
                        "default": 1
                    },
                    {
                        "name": "title",
                        "in": "query",
                        "type": "string"
                    },
                    {
                        "name": "organization",
                        "in": "query",
                        "type": "string"
                    },
                    {
                        "name": "status",
                        "in": "query",
                        "type": "string"
                    },
                    {
                        "name": "close_reason",
                        "in": "query",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv"
                    },
                    {
                        "name": "severity",
                        "in": "query",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv"
                    },
                    {
                        "name": "owner",
                        "in": "query",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv"
                    },
                    {
                        "name": "tag",
                        "in": "query",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv"
                    },
                    {
                        "name": "search",
                        "in": "query",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv"
                    },
                    {
                        "name": "my_tasks",
                        "in": "query",
                        "type": "boolean"
                    },
                    {
                        "name": "my_cases",
                        "in": "query",
                        "type": "boolean"
                    },
                    {
                        "name": "escalated",
                        "in": "query",
                        "type": "boolean"
                    },
                    {
                        "name": "sort_by",
                        "in": "query",
                        "type": "string",
                        "default": "created_at"
                    },
                    {
                        "name": "sort_direction",
                        "in": "query",
                        "type": "string",
                        "default": "desc"
                    },
                    {
                        "name": "start",
                        "in": "query",
                        "type": "string"
                    },
                    {
                        "name": "end",
                        "in": "query",
                        "type": "string"
                    },
                    {
                        "name": "X-Fields",
                        "in": "header",
                        "type": "string",
                        "format": "mask",
                        "description": "An optional fields mask"
                    }
                ],
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "tags": [
                    "Case"
                ]
            },
            "post": {
                "responses": {
                    "200": {
                        "description": "Successfully created the case."
                    },
                    "409": {
                        "description": "Case already exists."
                    }
                },
                "summary": "Creates a new case",
                "operationId": "post_case_list",
                "parameters": [
                    {
                        "name": "payload",
                        "required": true,
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/CaseCreate"
                        }
                    }
                ],
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "tags": [
                    "Case"
                ]
            }
        },
        "/case/stats": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Success"
                    }
                },
                "summary": "Returns metrics about cases that can be used for easier filtering",
                "description": "of cases on the Case List page",
                "operationId": "get_case_stats",
                "parameters": [
                    {
                        "name": "title",
                        "in": "query",
                        "type": "array",
                        "default": [],
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv"
                    },
                    {
                        "name": "status",
                        "in": "query",
                        "type": "array",
                        "default": [],
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv"
                    },
                    {
                        "name": "tags",
                        "in": "query",
                        "type": "array",
                        "default": [],
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv"
                    },
                    {
                        "name": "owner",
                        "in": "query",
                        "type": "array",
                        "default": [],
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv"
                    },
                    {
                        "name": "close_reason",
                        "in": "query",
                        "type": "array",
                        "default": [],
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv"
                    },
                    {
                        "name": "top",
                        "in": "query",
                        "type": "integer",
                        "default": 10
                    },
                    {
                        "name": "my_cases",
                        "in": "query",
                        "type": "boolean"
                    },
                    {
                        "name": "escalated",
                        "in": "query",
                        "type": "boolean"
                    },
                    {
                        "name": "interval",
                        "in": "query",
                        "type": "string",
                        "default": "day"
                    },
                    {
                        "name": "start",
                        "in": "query",
                        "type": "string"
                    },
                    {
                        "name": "end",
                        "in": "query",
                        "type": "string"
                    },
                    {
                        "name": "metrics",
                        "in": "query",
                        "type": "array",
                        "default": [
                            "title",
                            "tag",
                            "status",
                            "severity",
                            "close_reason",
                            "owner",
                            "organization",
                            "escalated"
                        ],
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv"
                    },
                    {
                        "name": "organization",
                        "in": "query",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv"
                    }
                ],
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "tags": [
                    "Case"
                ]
            }
        },
        "/case/{uuid}": {
            "parameters": [
                {
                    "name": "uuid",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ],
            "get": {
                "responses": {
                    "404": {
                        "description": "Case not found"
                    },
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/CaseDetails"
                        }
                    }
                },
                "summary": "Returns information about a case",
                "operationId": "get_case_details",
                "parameters": [
                    {
                        "name": "X-Fields",
                        "in": "header",
                        "type": "string",
                        "format": "mask",
                        "description": "An optional fields mask"
                    }
                ],
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "tags": [
                    "Case"
                ]
            },
            "delete": {
                "responses": {
                    "200": {
                        "description": "Success"
                    }
                },
                "summary": "Deletes a case",
                "operationId": "delete_case_details",
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "tags": [
                    "Case"
                ]
            },
            "put": {
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/CaseDetails"
                        }
                    }
                },
                "summary": "Updates information for a case",
                "operationId": "put_case_details",
                "parameters": [
                    {
                        "name": "payload",
                        "required": true,
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/CaseCreate"
                        }
                    },
                    {
                        "name": "X-Fields",
                        "in": "header",
                        "type": "string",
                        "format": "mask",
                        "description": "An optional fields mask"
                    }
                ],
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "tags": [
                    "Case"
                ]
            }
        },
        "/case/{uuid}/add_events": {
            "parameters": [
                {
                    "name": "uuid",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ],
            "put": {
                "responses": {
                    "404": {
                        "description": "Case not found."
                    },
                    "207": {
                        "description": "Success"
                    },
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/AddEventsToCaseResponse"
                        }
                    }
                },
                "summary": "Merges an event or events in to a case",
                "description": "Parameters:\n    uuid (str): The UUID of the case\n\nReturn:\n    dict: JSON response containing event details",
                "operationId": "put_add_events_to_case",
                "parameters": [
                    {
                        "name": "payload",
                        "required": true,
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/AddEventsToCase"
                        }
                    },
                    {
                        "name": "X-Fields",
                        "in": "header",
                        "type": "string",
                        "format": "mask",
                        "description": "An optional fields mask"
                    }
                ],
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "tags": [
                    "Case"
                ]
            }
        },
        "/case/{uuid}/add_observables/_bulk": {
            "parameters": [
                {
                    "name": "uuid",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ],
            "post": {
                "responses": {
                    "200": {
                        "description": "Success"
                    }
                },
                "summary": "Adds multiple observables to a case",
                "operationId": "post_case_add_observables",
                "parameters": [
                    {
                        "name": "payload",
                        "required": true,
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/BulkObservables"
                        }
                    },
                    {
                        "name": "X-Fields",
                        "in": "header",
                        "type": "string",
                        "format": "mask",
                        "description": "An optional fields mask"
                    }
                ],
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "tags": [
                    "Case"
                ]
            }
        },
        "/case/{uuid}/observables": {
            "parameters": [
                {
                    "name": "uuid",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ],
            "get": {
                "responses": {
                    "404": {
                        "description": "Case not found"
                    },
                    "200": {
                        "description": "Success",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/PagedObservableList"
                            }
                        }
                    }
                },
                "summary": "Returns the observables for a case",
                "operationId": "get_case_observables",
                "parameters": [
                    {
                        "name": "X-Fields",
                        "in": "header",
                        "type": "string",
                        "format": "mask",
                        "description": "An optional fields mask"
                    }
                ],
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "tags": [
                    "Case"
                ]
            }
        },
        "/case/{uuid}/observables/{value}": {
            "parameters": [
                {
                    "name": "uuid",
                    "in": "path",
                    "required": true,
                    "type": "string"
                },
                {
                    "name": "value",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ],
            "get": {
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "404": {
                        "description": "Observable not found"
                    }
                },
                "summary": "Returns the information about a single observable",
                "operationId": "get_case_observable",
                "parameters": [
                    {
                        "name": "X-Fields",
                        "in": "header",
                        "type": "string",
                        "format": "mask",
                        "description": "An optional fields mask"
                    }
                ],
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "tags": [
                    "Case"
                ]
            },
            "put": {
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "400": {
                        "description": "Observable not found"
                    }
                },
                "summary": "Updates a cases observable",
                "operationId": "put_case_observable",
                "parameters": [
                    {
                        "name": "payload",
                        "required": true,
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/ObservableUpdate"
                        }
                    },
                    {
                        "name": "X-Fields",
                        "in": "header",
                        "type": "string",
                        "format": "mask",
                        "description": "An optional fields mask"
                    }
                ],
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "tags": [
                    "Case"
                ]
            }
        },
        "/case/{uuid}/relate_cases": {
            "parameters": [
                {
                    "name": "uuid",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ],
            "get": {
                "responses": {
                    "404": {
                        "description": "Case not found."
                    },
                    "207": {
                        "description": "Success"
                    },
                    "200": {
                        "description": "Success",
                        "schema": {
                            "properties": {
                                "related_cases": {
                                    "$ref": "#/definitions/RelatedCase"
                                }
                            }
                        }
                    }
                },
                "summary": "Returns a list of related cases",
                "operationId": "get_relate_cases",
                "parameters": [
                    {
                        "name": "X-Fields",
                        "in": "header",
                        "type": "string",
                        "format": "mask",
                        "description": "An optional fields mask"
                    }
                ],
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "tags": [
                    "Case"
                ]
            },
            "delete": {
                "responses": {
                    "404": {
                        "description": "Case not found."
                    },
                    "207": {
                        "description": "Success"
                    },
                    "200": {
                        "description": "Success",
                        "schema": {
                            "properties": {
                                "related_cases": {
                                    "$ref": "#/definitions/RelatedCase"
                                }
                            }
                        }
                    }
                },
                "summary": "Unlinks a case or a group of cases",
                "operationId": "delete_relate_cases",
                "parameters": [
                    {
                        "name": "X-Fields",
                        "in": "header",
                        "type": "string",
                        "format": "mask",
                        "description": "An optional fields mask"
                    }
                ],
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "tags": [
                    "Case"
                ]
            },
            "put": {
                "responses": {
                    "404": {
                        "description": "Case not found."
                    },
                    "207": {
                        "description": "Success"
                    },
                    "200": {
                        "description": "Success",
                        "schema": {
                            "properties": {
                                "related_cases": {
                                    "$ref": "#/definitions/RelatedCase"
                                }
                            }
                        }
                    }
                },
                "operationId": "put_relate_cases",
                "parameters": [
                    {
                        "name": "payload",
                        "required": true,
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/LinkCases"
                        }
                    },
                    {
                        "name": "X-Fields",
                        "in": "header",
                        "type": "string",
                        "format": "mask",
                        "description": "An optional fields mask"
                    }
                ],
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "tags": [
                    "Case"
                ]
            }
        },
        "/case_comment": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/CommentDetails"
                            }
                        }
                    }
                },
                "summary": "Returns a list of comments",
                "operationId": "get_case_comment_list",
                "parameters": [
                    {
                        "name": "case_uuid",
                        "in": "query",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "X-Fields",
                        "in": "header",
                        "type": "string",
                        "format": "mask",
                        "description": "An optional fields mask"
                    }
                ],
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "tags": [
                    "CaseComment"
                ]
            },
            "post": {
                "responses": {
                    "200": {
                        "description": "AMAZING",
                        "schema": {
                            "$ref": "#/definitions/CommentDetails"
                        }
                    }
                },
                "operationId": "post_case_comment_list",
                "parameters": [
                    {
                        "name": "payload",
                        "required": true,
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/CommentCreate"
                        }
                    },
                    {
                        "name": "X-Fields",
                        "in": "header",
                        "type": "string",
                        "format": "mask",
                        "description": "An optional fields mask"
                    }
                ],
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "tags": [
                    "CaseComment"
                ]
            }
        },
        "/case_comment/{uuid}": {
            "parameters": [
                {
                    "name": "uuid",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ],
            "get": {
                "responses": {
                    "404": {
                        "description": "Comment not found"
                    },
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/CommentDetails"
                        }
                    }
                },
                "summary": "Returns information about a comment",
                "operationId": "get_case_comment_details",
                "parameters": [
                    {
                        "name": "X-Fields",
                        "in": "header",
                        "type": "string",
                        "format": "mask",
                        "description": "An optional fields mask"
                    }
                ],
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "tags": [
                    "CaseComment"
                ]
            },
            "delete": {
                "responses": {
                    "200": {
                        "description": "Success"
                    }
                },
                "summary": "Deletes a comment",
                "operationId": "delete_case_comment_details",
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "tags": [
                    "CaseComment"
                ]
            },
            "put": {
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/CommentDetails"
                        }
                    }
                },
                "summary": "Updates information for a comment",
                "operationId": "put_case_comment_details",
                "parameters": [
                    {
                        "name": "payload",
                        "required": true,
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/CommentCreate"
                        }
                    },
                    {
                        "name": "X-Fields",
                        "in": "header",
                        "type": "string",
                        "format": "mask",
                        "description": "An optional fields mask"
                    }
                ],
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "tags": [
                    "CaseComment"
                ]
            }
        },
        "/case_history": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/CaseHistoryEntry"
                            }
                        }
                    }
                },
                "summary": "Returns a list of case history events",
                "operationId": "get_case_history_list",
                "parameters": [
                    {
                        "name": "case_uuid",
                        "in": "query",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "X-Fields",
                        "in": "header",
                        "type": "string",
                        "format": "mask",
                        "description": "An optional fields mask"
                    }
                ],
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "tags": [
                    "CaseHistory"
                ]
            }
        },
        "/case_status": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/CaseStatusList"
                            }
                        }
                    }
                },
                "summary": "Returns a list of case_statuss",
                "operationId": "get_case_status_list",
                "parameters": [
                    {
                        "name": "name",
                        "in": "query",
                        "type": "string"
                    },
                    {
                        "name": "organization",
                        "in": "query",
                        "type": "string"
                    },
                    {
                        "name": "X-Fields",
                        "in": "header",
                        "type": "string",
                        "format": "mask",
                        "description": "An optional fields mask"
                    }
                ],
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "tags": [
                    "CaseStatus"
                ]
            },
            "post": {
                "responses": {
                    "200": {
                        "description": "Successfully create the CaseStatus."
                    },
                    "409": {
                        "description": "Case Status already exists."
                    }
                },
                "summary": "Creates a new Case Status",
                "operationId": "post_case_status_list",
                "parameters": [
                    {
                        "name": "payload",
                        "required": true,
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/CaseStatusCreate"
                        }
                    }
                ],
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "tags": [
                    "CaseStatus"
                ]
            }
        },
        "/case_status/{uuid}": {
            "parameters": [
                {
                    "name": "uuid",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ],
            "get": {
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/CaseStatusList"
                        }
                    }
                },
                "summary": "Returns information about an CaseStatus",
                "operationId": "get_case_status_details",
                "parameters": [
                    {
                        "name": "X-Fields",
                        "in": "header",
                        "type": "string",
                        "format": "mask",
                        "description": "An optional fields mask"
                    }
                ],
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "tags": [
                    "CaseStatus"
                ]
            },
            "delete": {
                "responses": {
                    "200": {
                        "description": "Success"
                    }
                },
                "summary": "Deletes an CaseStatus",
                "operationId": "delete_case_status_details",
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "tags": [
                    "CaseStatus"
                ]
            },
            "put": {
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/CaseStatusList"
                        }
                    }
                },
                "summary": "Updates information for an Case Status",
                "operationId": "put_case_status_details",
                "parameters": [
                    {
                        "name": "payload",
                        "required": true,
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/CaseStatusCreate"
                        }
                    },
                    {
                        "name": "X-Fields",
                        "in": "header",
                        "type": "string",
                        "format": "mask",
                        "description": "An optional fields mask"
                    }
                ],
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "tags": [
                    "CaseStatus"
                ]
            }
        },
        "/case_task": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/CaseTaskList"
                            }
                        }
                    }
                },
                "summary": "Returns a list of case_task",
                "operationId": "get_case_task_list",
                "parameters": [
                    {
                        "name": "case_uuid",
                        "in": "query",
                        "type": "string"
                    },
                    {
                        "name": "X-Fields",
                        "in": "header",
                        "type": "string",
                        "format": "mask",
                        "description": "An optional fields mask"
                    }
                ],
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "tags": [
                    "CaseTask"
                ]
            },
            "post": {
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/CaseTaskList"
                        }
                    },
                    "409": {
                        "description": "Case Task already exists."
                    }
                },
                "summary": "Creates a new case_task",
                "operationId": "post_case_task_list",
                "parameters": [
                    {
                        "name": "payload",
                        "required": true,
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/CaseTaskCreate"
                        }
                    },
                    {
                        "name": "X-Fields",
                        "in": "header",
                        "type": "string",
                        "format": "mask",
                        "description": "An optional fields mask"
                    }
                ],
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "tags": [
                    "CaseTask"
                ]
            }
        },
        "/case_task/{uuid}": {
            "parameters": [
                {
                    "name": "uuid",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ],
            "get": {
                "responses": {
                    "404": {
                        "description": "Case Task not found"
                    },
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/CaseTaskList"
                        }
                    }
                },
                "summary": "Returns information about a case task",
                "operationId": "get_case_task_details",
                "parameters": [
                    {
                        "name": "X-Fields",
                        "in": "header",
                        "type": "string",
                        "format": "mask",
                        "description": "An optional fields mask"
                    }
                ],
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "tags": [
                    "CaseTask"
                ]
            },
            "delete": {
                "responses": {
                    "200": {
                        "description": "Success"
                    }
                },
                "summary": "Deletes a case_task",
                "operationId": "delete_case_task_details",
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "tags": [
                    "CaseTask"
                ]
            },
            "put": {
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/CaseTaskList"
                        }
                    }
                },
                "summary": "Updates information for a case_task",
                "operationId": "put_case_task_details",
                "parameters": [
                    {
                        "name": "payload",
                        "required": true,
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/CaseTaskCreate"
                        }
                    },
                    {
                        "name": "X-Fields",
                        "in": "header",
                        "type": "string",
                        "format": "mask",
                        "description": "An optional fields mask"
                    }
                ],
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "tags": [
                    "CaseTask"
                ]
            }
        },
        "/case_task/{uuid}/add_note": {
            "parameters": [
                {
                    "name": "uuid",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ],
            "post": {
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/CaseTaskNoteDetails"
                        }
                    }
                },
                "summary": "Creates a new note on a specified task",
                "operationId": "post_case_task_note",
                "parameters": [
                    {
                        "name": "payload",
                        "required": true,
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/CreateTaskNote"
                        }
                    },
                    {
                        "name": "X-Fields",
                        "in": "header",
                        "type": "string",
                        "format": "mask",
                        "description": "An optional fields mask"
                    }
                ],
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "tags": [
                    "CaseTask"
                ]
            }
        },
        "/case_template": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/CaseTemplateList"
                            }
                        }
                    }
                },
                "summary": "Returns a list of case_template",
                "operationId": "get_case_template_list",
                "parameters": [
                    {
                        "name": "title",
                        "in": "query",
                        "type": "string"
                    },
                    {
                        "name": "organization",
                        "in": "query",
                        "type": "string"
                    },
                    {
                        "name": "X-Fields",
                        "in": "header",
                        "type": "string",
                        "format": "mask",
                        "description": "An optional fields mask"
                    }
                ],
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "tags": [
                    "CaseTemplate"
                ]
            },
            "post": {
                "responses": {
                    "200": {
                        "description": "Successfully created the case_template."
                    },
                    "409": {
                        "description": "Case Template already exists."
                    }
                },
                "operationId": "post_case_template_list",
                "parameters": [
                    {
                        "name": "payload",
                        "required": true,
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/CaseTemplateCreate"
                        }
                    },
                    {
                        "name": "X-Fields",
                        "in": "header",
                        "type": "string",
                        "format": "mask",
                        "description": "An optional fields mask"
                    }
                ],
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "tags": [
                    "CaseTemplate"
                ]
            }
        },
        "/case_template/{uuid}": {
            "parameters": [
                {
                    "name": "uuid",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ],
            "get": {
                "responses": {
                    "404": {
                        "description": "Case Template not found"
                    },
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/CaseTemplateList"
                        }
                    }
                },
                "summary": "Returns information about a case_template",
                "operationId": "get_case_template_details",
                "parameters": [
                    {
                        "name": "X-Fields",
                        "in": "header",
                        "type": "string",
                        "format": "mask",
                        "description": "An optional fields mask"
                    }
                ],
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "tags": [
                    "CaseTemplate"
                ]
            },
            "delete": {
                "responses": {
                    "200": {
                        "description": "Success"
                    }
                },
                "summary": "Deletes a case_template",
                "operationId": "delete_case_template_details",
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "tags": [
                    "CaseTemplate"
                ]
            },
            "put": {
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/CaseTemplateList"
                        }
                    }
                },
                "summary": "Updates information for a case_template",
                "operationId": "put_case_template_details",
                "parameters": [
                    {
                        "name": "payload",
                        "required": true,
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/CaseTemplateCreate"
                        }
                    },
                    {
                        "name": "X-Fields",
                        "in": "header",
                        "type": "string",
                        "format": "mask",
                        "description": "An optional fields mask"
                    }
                ],
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "tags": [
                    "CaseTemplate"
                ]
            }
        },
        "/close_reason": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/CloseReasonList"
                            }
                        }
                    }
                },
                "summary": "Returns a list of close_reasons",
                "operationId": "get_close_reason_list",
                "parameters": [
                    {
                        "name": "title",
                        "in": "query",
                        "type": "string"
                    },
                    {
                        "name": "organization",
                        "in": "query",
                        "type": "string"
                    },
                    {
                        "name": "X-Fields",
                        "in": "header",
                        "type": "string",
                        "format": "mask",
                        "description": "An optional fields mask"
                    }
                ],
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "tags": [
                    "CloseReason"
                ]
            },
            "post": {
                "responses": {
                    "200": {
                        "description": "Successfully create the CloseReason."
                    },
                    "409": {
                        "description": "Close Reason already exists."
                    }
                },
                "summary": "Creates a new Close Reason",
                "operationId": "post_close_reason_list",
                "parameters": [
                    {
                        "name": "payload",
                        "required": true,
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/CreateCloseReason"
                        }
                    }
                ],
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "tags": [
                    "CloseReason"
                ]
            }
        },
        "/close_reason/{uuid}": {
            "parameters": [
                {
                    "name": "uuid",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ],
            "get": {
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/CloseReasonList"
                        }
                    }
                },
                "summary": "Returns information about an CloseReason",
                "operationId": "get_close_reason_details",
                "parameters": [
                    {
                        "name": "X-Fields",
                        "in": "header",
                        "type": "string",
                        "format": "mask",
                        "description": "An optional fields mask"
                    }
                ],
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "tags": [
                    "CloseReason"
                ]
            },
            "delete": {
                "responses": {
                    "200": {
                        "description": "Success"
                    }
                },
                "summary": "Deletes an CloseReason",
                "operationId": "delete_close_reason_details",
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "tags": [
                    "CloseReason"
                ]
            },
            "put": {
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/CloseReasonList"
                        }
                    }
                },
                "summary": "Updates information for an Close Reason",
                "operationId": "put_close_reason_details",
                "parameters": [
                    {
                        "name": "payload",
                        "required": true,
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/CreateCloseReason"
                        }
                    },
                    {
                        "name": "X-Fields",
                        "in": "header",
                        "type": "string",
                        "format": "mask",
                        "description": "An optional fields mask"
                    }
                ],
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "tags": [
                    "CloseReason"
                ]
            }
        },
        "/credential": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/CredentialListPaged"
                        }
                    }
                },
                "operationId": "get_credential_list",
                "parameters": [
                    {
                        "name": "page_size",
                        "in": "query",
                        "type": "integer",
                        "default": 10
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "type": "integer",
                        "default": 1
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "type": "string"
                    },
                    {
                        "name": "organization",
                        "in": "query",
                        "type": "string"
                    },
                    {
                        "name": "sort_by",
                        "in": "query",
                        "type": "string",
                        "default": "created_at"
                    },
                    {
                        "name": "sort_direction",
                        "in": "query",
                        "type": "string",
                        "default": "desc"
                    },
                    {
                        "name": "X-Fields",
                        "in": "header",
                        "type": "string",
                        "format": "mask",
                        "description": "An optional fields mask"
                    }
                ],
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "tags": [
                    "Credential"
                ]
            }
        },
        "/credential/decrypt/{uuid}": {
            "parameters": [
                {
                    "name": "uuid",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ],
            "get": {
                "responses": {
                    "404": {
                        "description": "Credential not found."
                    },
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/CredentialReturn"
                        }
                    }
                },
                "summary": "Decrypts the credential for use",
                "operationId": "get_decrypt_password",
                "parameters": [
                    {
                        "name": "X-Fields",
                        "in": "header",
                        "type": "string",
                        "format": "mask",
                        "description": "An optional fields mask"
                    }
                ],
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "tags": [
                    "Credential"
                ]
            }
        },
        "/credential/encrypt": {
            "post": {
                "responses": {
                    "409": {
                        "description": "Credential already exists."
                    },
                    "400": {
                        "description": "Successfully created credential."
                    },
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/Credential"
                        }
                    }
                },
                "summary": "Encrypts the password",
                "operationId": "post_encrypt_password",
                "parameters": [
                    {
                        "name": "payload",
                        "required": true,
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/CredentialCreate"
                        }
                    },
                    {
                        "name": "X-Fields",
                        "in": "header",
                        "type": "string",
                        "format": "mask",
                        "description": "An optional fields mask"
                    }
                ],
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "tags": [
                    "Credential"
                ]
            }
        },
        "/credential/{uuid}": {
            "parameters": [
                {
                    "name": "uuid",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ],
            "get": {
                "responses": {
                    "404": {
                        "description": "Credential not found."
                    },
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/Credential"
                        }
                    }
                },
                "summary": "Gets the full details of a credential",
                "operationId": "get_credential_details",
                "parameters": [
                    {
                        "name": "X-Fields",
                        "in": "header",
                        "type": "string",
                        "format": "mask",
                        "description": "An optional fields mask"
                    }
                ],
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "tags": [
                    "Credential"
                ]
            },
            "delete": {
                "responses": {
                    "200": {
                        "description": "Credential sucessfully deleted."
                    },
                    "404": {
                        "description": "Credential not found."
                    }
                },
                "summary": "Deletes a credential",
                "operationId": "delete_credential_details",
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "tags": [
                    "Credential"
                ]
            },
            "put": {
                "responses": {
                    "409": {
                        "description": "Credential name already exists."
                    },
                    "404": {
                        "description": "Credential not found."
                    },
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/Credential"
                        }
                    }
                },
                "summary": "Updates a credential",
                "operationId": "put_credential_details",
                "parameters": [
                    {
                        "name": "payload",
                        "required": true,
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/CredentialUpdate"
                        }
                    },
                    {
                        "name": "X-Fields",
                        "in": "header",
                        "type": "string",
                        "format": "mask",
                        "description": "An optional fields mask"
                    }
                ],
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "tags": [
                    "Credential"
                ]
            }
        },
        "/dashboard": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Success"
                    }
                },
                "operationId": "get_dashboard_metrics",
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "tags": [
                    "Dashboard"
                ]
            }
        },
        "/data_type": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/DataTypeList"
                        }
                    }
                },
                "summary": "Gets a list of all the data types",
                "operationId": "get_data_type_list",
                "parameters": [
                    {
                        "name": "X-Fields",
                        "in": "header",
                        "type": "string",
                        "format": "mask",
                        "description": "An optional fields mask"
                    }
                ],
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "tags": [
                    "DataType"
                ]
            },
            "post": {
                "responses": {
                    "200": {
                        "description": "Successfully created data type."
                    }
                },
                "summary": "Creates a new data_type set",
                "operationId": "post_data_type_list",
                "parameters": [
                    {
                        "name": "payload",
                        "required": true,
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/CreateDataType"
                        }
                    }
                ],
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "tags": [
                    "DataType"
                ]
            }
        },
        "/data_type/{uuid}": {
            "parameters": [
                {
                    "name": "uuid",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ],
            "get": {
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/DataTypeList"
                        }
                    }
                },
                "summary": "Gets a data type",
                "operationId": "get_data_type_details",
                "parameters": [
                    {
                        "name": "X-Fields",
                        "in": "header",
                        "type": "string",
                        "format": "mask",
                        "description": "An optional fields mask"
                    }
                ],
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "tags": [
                    "DataType"
                ]
            },
            "put": {
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/DataTypeList"
                        }
                    }
                },
                "summary": "Updates the data type",
                "operationId": "put_data_type_details",
                "parameters": [
                    {
                        "name": "payload",
                        "required": true,
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/CreateDataType"
                        }
                    },
                    {
                        "name": "X-Fields",
                        "in": "header",
                        "type": "string",
                        "format": "mask",
                        "description": "An optional fields mask"
                    }
                ],
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "tags": [
                    "DataType"
                ]
            }
        },
        "/event": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/PagedEventList"
                        }
                    }
                },
                "operationId": "get_event_list_aggregated",
                "parameters": [
                    {
                        "name": "status",
                        "in": "query",
                        "type": "array",
                        "default": [],
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv"
                    },
                    {
                        "name": "tags",
                        "in": "query",
                        "type": "array",
                        "default": [],
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv"
                    },
                    {
                        "name": "observables",
                        "in": "query",
                        "type": "array",
                        "default": [],
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv"
                    },
                    {
                        "name": "signature",
                        "in": "query",
                        "type": "string"
                    },
                    {
                        "name": "source",
                        "in": "query",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv"
                    },
                    {
                        "name": "event_rule",
                        "in": "query",
                        "type": "array",
                        "default": [],
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv"
                    },
                    {
                        "name": "severity",
                        "in": "query",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv"
                    },
                    {
                        "name": "grouped",
                        "in": "query",
                        "type": "boolean"
                    },
                    {
                        "name": "case_uuid",
                        "in": "query",
                        "type": "string"
                    },
                    {
                        "name": "search",
                        "in": "query",
                        "type": "array",
                        "default": [],
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv"
                    },
                    {
                        "name": "title__like",
                        "in": "query",
                        "type": "string"
                    },
                    {
                        "name": "title",
                        "in": "query",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv"
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "type": "integer",
                        "default": 1
                    },
                    {
                        "name": "page_size",
                        "in": "query",
                        "type": "integer",
                        "default": 10
                    },
                    {
                        "name": "sort_by",
                        "in": "query",
                        "type": "string",
                        "default": "created_at"
                    },
                    {
                        "name": "sort_direction",
                        "in": "query",
                        "type": "string",
                        "default": "desc"
                    },
                    {
                        "name": "start",
                        "in": "query",
                        "type": "string"
                    },
                    {
                        "name": "end",
                        "in": "query",
                        "type": "string"
                    },
                    {
                        "name": "organization",
                        "in": "query",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv"
                    },
                    {
                        "name": "X-Fields",
                        "in": "header",
                        "type": "string",
                        "format": "mask",
                        "description": "An optional fields mask"
                    }
                ],
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "tags": [
                    "Events"
                ]
            },
            "post": {
                "responses": {
                    "200": {
                        "description": "Success"
                    }
                },
                "summary": "Creates a new event",
                "operationId": "post_event_list_aggregated",
                "parameters": [
                    {
                        "name": "payload",
                        "required": true,
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/EventCreate"
                        }
                    }
                ],
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "tags": [
                    "Events"
                ]
            }
        },
        "/event/_bulk": {
            "post": {
                "responses": {
                    "200": {
                        "description": "Success"
                    }
                },
                "operationId": "post_create_bulk_events",
                "parameters": [
                    {
                        "name": "payload",
                        "required": true,
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/EventCreateBulk"
                        }
                    }
                ],
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "tags": [
                    "Events"
                ]
            }
        },
        "/event/bulk_delete": {
            "delete": {
                "responses": {
                    "200": {
                        "description": "Success"
                    }
                },
                "summary": "Deletes an event and any related artifacts from the system",
                "description": "Parameters:\n    uuid (str): The unique identifier of the Event\n    current_user (User): The current user making the API request",
                "operationId": "delete_bulk_delete_event",
                "parameters": [
                    {
                        "name": "payload",
                        "required": true,
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/EventBulkDismiss"
                        }
                    }
                ],
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "tags": [
                    "Events"
                ]
            }
        },
        "/event/bulk_dismiss": {
            "put": {
                "responses": {
                    "200": {
                        "description": "Success"
                    }
                },
                "summary": "Dismiss multiple events at the same time",
                "operationId": "put_event_bulk_update",
                "parameters": [
                    {
                        "name": "payload",
                        "required": true,
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/EventBulkDismiss"
                        }
                    }
                ],
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "tags": [
                    "Events"
                ]
            }
        },
        "/event/bulk_select_all": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/BulkEventUUIDs"
                        }
                    }
                },
                "operationId": "get_bulk_select_all",
                "parameters": [
                    {
                        "name": "status",
                        "in": "query",
                        "type": "array",
                        "default": [],
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv"
                    },
                    {
                        "name": "tags",
                        "in": "query",
                        "type": "array",
                        "default": [],
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv"
                    },
                    {
                        "name": "observables",
                        "in": "query",
                        "type": "array",
                        "default": [],
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv"
                    },
                    {
                        "name": "signature",
                        "in": "query",
                        "type": "string"
                    },
                    {
                        "name": "source",
                        "in": "query",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv"
                    },
                    {
                        "name": "severity",
                        "in": "query",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv"
                    },
                    {
                        "name": "grouped",
                        "in": "query",
                        "type": "boolean"
                    },
                    {
                        "name": "case_uuid",
                        "in": "query",
                        "type": "string"
                    },
                    {
                        "name": "search",
                        "in": "query",
                        "type": "array",
                        "default": [],
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv"
                    },
                    {
                        "name": "title",
                        "in": "query",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv"
                    },
                    {
                        "name": "title__like",
                        "in": "query",
                        "type": "string"
                    },
                    {
                        "name": "organization",
                        "in": "query",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv"
                    },
                    {
                        "name": "start",
                        "in": "query",
                        "type": "string"
                    },
                    {
                        "name": "end",
                        "in": "query",
                        "type": "string"
                    },
                    {
                        "name": "X-Fields",
                        "in": "header",
                        "type": "string",
                        "format": "mask",
                        "description": "An optional fields mask"
                    }
                ],
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "tags": [
                    "Events"
                ]
            }
        },
        "/event/case_events/{uuid}": {
            "parameters": [
                {
                    "name": "uuid",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ],
            "get": {
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/PagedEventList"
                        }
                    }
                },
                "operationId": "get_events_by_case",
                "parameters": [
                    {
                        "name": "status",
                        "in": "query",
                        "type": "array",
                        "default": [],
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv"
                    },
                    {
                        "name": "tags",
                        "in": "query",
                        "type": "array",
                        "default": [],
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv"
                    },
                    {
                        "name": "observables",
                        "in": "query",
                        "type": "array",
                        "default": [],
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv"
                    },
                    {
                        "name": "signature",
                        "in": "query",
                        "type": "string"
                    },
                    {
                        "name": "source",
                        "in": "query",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv"
                    },
                    {
                        "name": "event_rule",
                        "in": "query",
                        "type": "array",
                        "default": [],
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv"
                    },
                    {
                        "name": "severity",
                        "in": "query",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv"
                    },
                    {
                        "name": "grouped",
                        "in": "query",
                        "type": "boolean"
                    },
                    {
                        "name": "case_uuid",
                        "in": "query",
                        "type": "string"
                    },
                    {
                        "name": "search",
                        "in": "query",
                        "type": "array",
                        "default": [],
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv"
                    },
                    {
                        "name": "title__like",
                        "in": "query",
                        "type": "string"
                    },
                    {
                        "name": "title",
                        "in": "query",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv"
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "type": "integer",
                        "default": 1
                    },
                    {
                        "name": "page_size",
                        "in": "query",
                        "type": "integer",
                        "default": 10
                    },
                    {
                        "name": "sort_by",
                        "in": "query",
                        "type": "string",
                        "default": "created_at"
                    },
                    {
                        "name": "sort_direction",
                        "in": "query",
                        "type": "string",
                        "default": "desc"
                    },
                    {
                        "name": "start",
                        "in": "query",
                        "type": "string"
                    },
                    {
                        "name": "end",
                        "in": "query",
                        "type": "string"
                    },
                    {
                        "name": "organization",
                        "in": "query",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv"
                    },
                    {
                        "name": "X-Fields",
                        "in": "header",
                        "type": "string",
                        "format": "mask",
                        "description": "An optional fields mask"
                    }
                ],
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "tags": [
                    "Events"
                ]
            }
        },
        "/event/dismiss_by_filter": {
            "put": {
                "responses": {
                    "200": {
                        "description": "Success"
                    }
                },
                "summary": "Dismiss multiple events at a time by supplying a query to select",
                "description": "the events to dismiss",
                "operationId": "put_event_bulk_dismiss",
                "parameters": [
                    {
                        "name": "payload",
                        "required": true,
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/EventBulkDismissByFilter"
                        }
                    }
                ],
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "tags": [
                    "Events"
                ]
            }
        },
        "/event/observables_by_case/{uuid}": {
            "parameters": [
                {
                    "name": "uuid",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ],
            "get": {
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/PagedObservableList"
                        }
                    }
                },
                "operationId": "get_event_observables_by_case",
                "parameters": [
                    {
                        "name": "X-Fields",
                        "in": "header",
                        "type": "string",
                        "format": "mask",
                        "description": "An optional fields mask"
                    }
                ],
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "tags": [
                    "Events"
                ]
            }
        },
        "/event/queue_stats": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Success"
                    }
                },
                "operationId": "get_event_queue_stats",
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "tags": [
                    "Events"
                ]
            }
        },
        "/event/stats": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Success"
                    }
                },
                "summary": "Returns metrics about events that can be used for easier filtering",
                "description": "of events on the Events List page",
                "operationId": "get_event_stats",
                "parameters": [
                    {
                        "name": "status",
                        "in": "query",
                        "type": "array",
                        "default": [],
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv"
                    },
                    {
                        "name": "tags",
                        "in": "query",
                        "type": "array",
                        "default": [],
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv"
                    },
                    {
                        "name": "signature",
                        "in": "query",
                        "type": "string"
                    },
                    {
                        "name": "severity",
                        "in": "query",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv"
                    },
                    {
                        "name": "title",
                        "in": "query",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv"
                    },
                    {
                        "name": "title__like",
                        "in": "query",
                        "type": "string"
                    },
                    {
                        "name": "observables",
                        "in": "query",
                        "type": "array",
                        "default": [],
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv"
                    },
                    {
                        "name": "source",
                        "in": "query",
                        "type": "array",
                        "default": [],
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv"
                    },
                    {
                        "name": "event_rule",
                        "in": "query",
                        "type": "array",
                        "default": [],
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv"
                    },
                    {
                        "name": "top",
                        "in": "query",
                        "type": "integer",
                        "default": 10
                    },
                    {
                        "name": "start",
                        "in": "query",
                        "type": "string"
                    },
                    {
                        "name": "end",
                        "in": "query",
                        "type": "string"
                    },
                    {
                        "name": "interval",
                        "in": "query",
                        "type": "string",
                        "default": "day"
                    },
                    {
                        "name": "metrics",
                        "in": "query",
                        "type": "array",
                        "default": [
                            "title",
                            "observable",
                            "source",
                            "tag",
                            "status",
                            "severity",
                            "data_type",
                            "event_rule",
                            "signature"
                        ],
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv"
                    },
                    {
                        "name": "organization",
                        "in": "query",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv"
                    }
                ],
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "tags": [
                    "Events"
                ]
            }
        },
        "/event/{signature}/new_related_events": {
            "parameters": [
                {
                    "name": "signature",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ],
            "get": {
                "responses": {
                    "404": {
                        "description": "Event not found"
                    },
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/RelatedEvents"
                        }
                    }
                },
                "summary": "Returns the UUIDs of all related events that are Open",
                "operationId": "get_event_new_related_events",
                "parameters": [
                    {
                        "name": "count",
                        "in": "query",
                        "type": "boolean",
                        "default": false
                    },
                    {
                        "name": "status",
                        "in": "query",
                        "type": "string",
                        "default": "New"
                    },
                    {
                        "name": "X-Fields",
                        "in": "header",
                        "type": "string",
                        "format": "mask",
                        "description": "An optional fields mask"
                    }
                ],
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "tags": [
                    "Events"
                ]
            }
        },
        "/event/{uuid}": {
            "parameters": [
                {
                    "name": "uuid",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ],
            "get": {
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/EventDetails"
                        }
                    }
                },
                "operationId": "get_event_details",
                "parameters": [
                    {
                        "name": "X-Fields",
                        "in": "header",
                        "type": "string",
                        "format": "mask",
                        "description": "An optional fields mask"
                    }
                ],
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "tags": [
                    "Events"
                ]
            },
            "delete": {
                "responses": {
                    "200": {
                        "description": "Success"
                    }
                },
                "summary": "Deletes an event and any related artifacts from the system",
                "description": "Parameters:\n    uuid (str): The unique identifier of the Event\n    current_user (User): The current user making the API request",
                "operationId": "delete_event_details",
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "tags": [
                    "Events"
                ]
            },
            "put": {
                "responses": {
                    "200": {
                        "description": "Success"
                    }
                },
                "summary": "Updates an event",
                "description": "Parameters:\n    uuid (str): The unique identifier of the Event\n    current_user (User): The current user making the API request",
                "operationId": "put_event_details",
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "tags": [
                    "Events"
                ]
            }
        },
        "/event/{uuid}/observables/{value}": {
            "parameters": [
                {
                    "name": "uuid",
                    "in": "path",
                    "required": true,
                    "type": "string"
                },
                {
                    "name": "value",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ],
            "put": {
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "400": {
                        "description": "Observable not found"
                    }
                },
                "summary": "Updates an events observable",
                "operationId": "put_event_observable",
                "parameters": [
                    {
                        "name": "payload",
                        "required": true,
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/ObservableUpdate"
                        }
                    },
                    {
                        "name": "X-Fields",
                        "in": "header",
                        "type": "string",
                        "format": "mask",
                        "description": "An optional fields mask"
                    }
                ],
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "tags": [
                    "Events"
                ]
            }
        },
        "/event_rule": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/PagedEventRuleList"
                        }
                    }
                },
                "summary": "Gets a list of all the event rules",
                "operationId": "get_event_rule_list",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "type": "integer",
                        "default": 1
                    },
                    {
                        "name": "sort_by",
                        "in": "query",
                        "type": "string",
                        "default": "created_at"
                    },
                    {
                        "name": "sort_direction",
                        "in": "query",
                        "type": "string",
                        "default": "asc"
                    },
                    {
                        "name": "page_size",
                        "in": "query",
                        "type": "integer",
                        "default": 25
                    },
                    {
                        "name": "rules",
                        "in": "query",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv"
                    },
                    {
                        "name": "X-Fields",
                        "in": "header",
                        "type": "string",
                        "format": "mask",
                        "description": "An optional fields mask"
                    }
                ],
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "tags": [
                    "EventRule"
                ]
            },
            "post": {
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/EventRuleList"
                        }
                    }
                },
                "summary": "Creates a new event_rule",
                "operationId": "post_event_rule_list",
                "parameters": [
                    {
                        "name": "payload",
                        "required": true,
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/CreateEventRule"
                        }
                    },
                    {
                        "name": "X-Fields",
                        "in": "header",
                        "type": "string",
                        "format": "mask",
                        "description": "An optional fields mask"
                    }
                ],
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "tags": [
                    "EventRule"
                ]
            }
        },
        "/event_rule/export": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Success",
                        "headers": {
                            "Content-Type": {
                                "description": "application/x-ndjson",
                                "type": "string"
                            }
                        }
                    }
                },
                "summary": "Takes a list of organizations and exports all the Event Rules for the supplied organizations",
                "description": "as NDJSON, if no organizations are provided, just dump the rules for the users current\norganization.",
                "operationId": "get_export_event_rules",
                "parameters": [
                    {
                        "name": "organizations",
                        "in": "query",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv"
                    }
                ],
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "tags": [
                    "EventRule"
                ]
            }
        },
        "/event_rule/import": {
            "post": {
                "responses": {
                    "200": {
                        "description": "Success"
                    }
                },
                "operationId": "post_import_event_rules",
                "parameters": [
                    {
                        "name": "files",
                        "in": "formData",
                        "type": "array",
                        "required": true,
                        "items": {
                            "type": "file"
                        },
                        "collectionFormat": "multi"
                    }
                ],
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "consumes": [
                    "application/x-www-form-urlencoded",
                    "multipart/form-data"
                ],
                "tags": [
                    "EventRule"
                ]
            }
        },
        "/event_rule/stats": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Success"
                    }
                },
                "operationId": "get_event_rule_stats",
                "parameters": [
                    {
                        "name": "rules",
                        "in": "query",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv"
                    },
                    {
                        "name": "metrics",
                        "in": "query",
                        "type": "array",
                        "default": [
                            "hits"
                        ],
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv"
                    },
                    {
                        "name": "start",
                        "in": "query",
                        "type": "string"
                    },
                    {
                        "name": "end",
                        "in": "query",
                        "type": "string"
                    }
                ],
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "tags": [
                    "EventRule"
                ]
            }
        },
        "/event_rule/test_rule_rql": {
            "post": {
                "responses": {
                    "200": {
                        "description": "Success"
                    }
                },
                "summary": "Tests an RQL query against a target event to see if the RQL is valid",
                "operationId": "post_test_event_rql",
                "parameters": [
                    {
                        "name": "payload",
                        "required": true,
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/TestEventRuleQuery"
                        }
                    }
                ],
                "tags": [
                    "EventRule"
                ]
            }
        },
        "/event_rule/{uuid}": {
            "parameters": [
                {
                    "name": "uuid",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ],
            "get": {
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/EventRuleList"
                        }
                    }
                },
                "summary": "Gets a event rule",
                "operationId": "get_event_rule_details",
                "parameters": [
                    {
                        "name": "X-Fields",
                        "in": "header",
                        "type": "string",
                        "format": "mask",
                        "description": "An optional fields mask"
                    }
                ],
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "tags": [
                    "EventRule"
                ]
            },
            "delete": {
                "responses": {
                    "200": {
                        "description": "Success"
                    }
                },
                "summary": "Removes an event rule",
                "operationId": "delete_event_rule_details",
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "tags": [
                    "EventRule"
                ]
            },
            "put": {
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/EventRuleList"
                        }
                    }
                },
                "summary": "Updates the event rule",
                "operationId": "put_event_rule_details",
                "parameters": [
                    {
                        "name": "payload",
                        "required": true,
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/CreateEventRule"
                        }
                    },
                    {
                        "name": "X-Fields",
                        "in": "header",
                        "type": "string",
                        "format": "mask",
                        "description": "An optional fields mask"
                    }
                ],
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "tags": [
                    "EventRule"
                ]
            }
        },
        "/hunting/query": {
            "post": {
                "responses": {
                    "200": {
                        "description": "Success"
                    }
                },
                "operationId": "post_hunting_query",
                "tags": [
                    "Hunting"
                ]
            }
        },
        "/input": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/InputListPaged"
                            }
                        }
                    }
                },
                "summary": "Returns a list of inputs",
                "operationId": "get_input_list",
                "parameters": [
                    {
                        "name": "name",
                        "in": "query",
                        "type": "string"
                    },
                    {
                        "name": "organization",
                        "in": "query",
                        "type": "string"
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "type": "integer",
                        "default": 1
                    },
                    {
                        "name": "page_size",
                        "in": "query",
                        "type": "integer",
                        "default": 10
                    },
                    {
                        "name": "sort_by",
                        "in": "query",
                        "type": "string",
                        "default": "created_at"
                    },
                    {
                        "name": "sort_direction",
                        "in": "query",
                        "type": "string",
                        "default": "desc"
                    },
                    {
                        "name": "X-Fields",
                        "in": "header",
                        "type": "string",
                        "format": "mask",
                        "description": "An optional fields mask"
                    }
                ],
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "tags": [
                    "Input"
                ]
            },
            "post": {
                "responses": {
                    "200": {
                        "description": "Successfully create the input."
                    },
                    "409": {
                        "description": "Input already exists."
                    }
                },
                "summary": "Creates a new input",
                "operationId": "post_input_list",
                "parameters": [
                    {
                        "name": "payload",
                        "required": true,
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/CreateInput"
                        }
                    }
                ],
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "tags": [
                    "Input"
                ]
            }
        },
        "/input/{uuid}": {
            "parameters": [
                {
                    "name": "uuid",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ],
            "get": {
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/InputList"
                        }
                    }
                },
                "summary": "Returns information about an input",
                "operationId": "get_input_details",
                "parameters": [
                    {
                        "name": "X-Fields",
                        "in": "header",
                        "type": "string",
                        "format": "mask",
                        "description": "An optional fields mask"
                    }
                ],
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "tags": [
                    "Input"
                ]
            },
            "delete": {
                "responses": {
                    "200": {
                        "description": "Success"
                    }
                },
                "summary": "Deletes an input",
                "operationId": "delete_input_details",
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "tags": [
                    "Input"
                ]
            },
            "put": {
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/InputList"
                        }
                    }
                },
                "summary": "Updates information for an input",
                "operationId": "put_input_details",
                "parameters": [
                    {
                        "name": "payload",
                        "required": true,
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/CreateInput"
                        }
                    },
                    {
                        "name": "X-Fields",
                        "in": "header",
                        "type": "string",
                        "format": "mask",
                        "description": "An optional fields mask"
                    }
                ],
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "tags": [
                    "Input"
                ]
            }
        },
        "/list": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ListViewPaged"
                            }
                        }
                    }
                },
                "summary": "Returns a list of ThreatLists",
                "operationId": "get_threat_list_list",
                "parameters": [
                    {
                        "name": "data_type",
                        "in": "query",
                        "type": "string"
                    },
                    {
                        "name": "organization",
                        "in": "query",
                        "type": "string"
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "type": "integer",
                        "default": 1
                    },
                    {
                        "name": "page_size",
                        "in": "query",
                        "type": "integer",
                        "default": 10
                    },
                    {
                        "name": "X-Fields",
                        "in": "header",
                        "type": "string",
                        "format": "mask",
                        "description": "An optional fields mask"
                    }
                ],
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "tags": [
                    "Lists"
                ]
            },
            "post": {
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/ListView"
                        }
                    },
                    "409": {
                        "description": "ThreatList already exists."
                    }
                },
                "summary": "Creates a new ThreatList",
                "description": "A threat list is what the system uses to determine if an observable\nis malicious or suspicious in nature.  ThreatLists can be consumed\nvia target URLs or manually entered in to the system, or added to\nvia the API. \n\nSupported list types: `values|pattern|csv`\n\nWhen `url` is populated the `values` field will be ignored.",
                "operationId": "post_threat_list_list",
                "parameters": [
                    {
                        "name": "payload",
                        "required": true,
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/ListCreate"
                        }
                    },
                    {
                        "name": "X-Fields",
                        "in": "header",
                        "type": "string",
                        "format": "mask",
                        "description": "An optional fields mask"
                    }
                ],
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "tags": [
                    "Lists"
                ]
            }
        },
        "/list/stats": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Success"
                    }
                },
                "operationId": "get_intel_list_stats",
                "parameters": [
                    {
                        "name": "list",
                        "in": "query",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv"
                    },
                    {
                        "name": "value",
                        "in": "query",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv"
                    },
                    {
                        "name": "value__like",
                        "in": "query",
                        "type": "string"
                    },
                    {
                        "name": "list_name__like",
                        "in": "query",
                        "type": "string"
                    },
                    {
                        "name": "record_id",
                        "in": "query",
                        "type": "string"
                    },
                    {
                        "name": "data_type",
                        "in": "query",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv"
                    },
                    {
                        "name": "from_poll",
                        "in": "query",
                        "type": "boolean"
                    },
                    {
                        "name": "top",
                        "in": "query",
                        "type": "integer",
                        "default": 10
                    },
                    {
                        "name": "start",
                        "in": "query",
                        "type": "string",
                        "default": "2022-04-25T00:26:08"
                    },
                    {
                        "name": "end",
                        "in": "query",
                        "type": "string",
                        "default": "2022-05-03T00:26:08"
                    },
                    {
                        "name": "interval",
                        "in": "query",
                        "type": "string",
                        "default": "day"
                    },
                    {
                        "name": "metrics",
                        "in": "query",
                        "type": "array",
                        "default": [
                            "list",
                            "value",
                            "data_type",
                            "from_poll"
                        ],
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv"
                    },
                    {
                        "name": "organization",
                        "in": "query",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv"
                    }
                ],
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "tags": [
                    "Lists"
                ]
            }
        },
        "/list/test/{uuid}/{value}": {
            "parameters": [
                {
                    "name": "uuid",
                    "in": "path",
                    "required": true,
                    "type": "string"
                },
                {
                    "name": "value",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ],
            "get": {
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/ListMatch"
                        }
                    }
                },
                "operationId": "get_threat_list_test",
                "parameters": [
                    {
                        "name": "X-Fields",
                        "in": "header",
                        "type": "string",
                        "format": "mask",
                        "description": "An optional fields mask"
                    }
                ],
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "tags": [
                    "Lists"
                ]
            }
        },
        "/list/values": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/ListValuesPaged"
                        }
                    }
                },
                "operationId": "get_intel_list_values",
                "parameters": [
                    {
                        "name": "list",
                        "in": "query",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv"
                    },
                    {
                        "name": "value",
                        "in": "query",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv"
                    },
                    {
                        "name": "data_type",
                        "in": "query",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv"
                    },
                    {
                        "name": "from_poll",
                        "in": "query",
                        "type": "boolean"
                    },
                    {
                        "name": "value__like",
                        "in": "query",
                        "type": "string"
                    },
                    {
                        "name": "list_name__like",
                        "in": "query",
                        "type": "string"
                    },
                    {
                        "name": "record_id",
                        "in": "query",
                        "type": "string"
                    },
                    {
                        "name": "organization",
                        "in": "query",
                        "type": "string"
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "type": "integer",
                        "default": 1
                    },
                    {
                        "name": "page_size",
                        "in": "query",
                        "type": "integer",
                        "default": 10
                    },
                    {
                        "name": "X-Fields",
                        "in": "header",
                        "type": "string",
                        "format": "mask",
                        "description": "An optional fields mask"
                    }
                ],
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "tags": [
                    "Lists"
                ]
            }
        },
        "/list/{uuid}": {
            "parameters": [
                {
                    "name": "uuid",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ],
            "get": {
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/ListView"
                        }
                    }
                },
                "summary": "Gets the details of a ThreatList",
                "operationId": "get_threat_list_details",
                "parameters": [
                    {
                        "name": "X-Fields",
                        "in": "header",
                        "type": "string",
                        "format": "mask",
                        "description": "An optional fields mask"
                    }
                ],
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "tags": [
                    "Lists"
                ]
            },
            "delete": {
                "responses": {
                    "200": {
                        "description": "Success"
                    }
                },
                "summary": "Removes a ThreatList",
                "operationId": "delete_threat_list_details",
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "tags": [
                    "Lists"
                ]
            },
            "put": {
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/ListView"
                        }
                    }
                },
                "summary": "Updates a ThreatList",
                "operationId": "put_threat_list_details",
                "parameters": [
                    {
                        "name": "payload",
                        "required": true,
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/ListCreate"
                        }
                    },
                    {
                        "name": "X-Fields",
                        "in": "header",
                        "type": "string",
                        "format": "mask",
                        "description": "An optional fields mask"
                    }
                ],
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "tags": [
                    "Lists"
                ]
            }
        },
        "/list/{uuid}/add_value": {
            "parameters": [
                {
                    "name": "uuid",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ],
            "put": {
                "responses": {
                    "200": {
                        "description": "Success"
                    }
                },
                "summary": "Adds values to a ThreatList",
                "operationId": "put_add_value_to_threat_list",
                "parameters": [
                    {
                        "name": "payload",
                        "required": true,
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/ListValues"
                        }
                    }
                ],
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "tags": [
                    "Lists"
                ]
            }
        },
        "/list/{uuid}/remove_value": {
            "parameters": [
                {
                    "name": "uuid",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ],
            "delete": {
                "responses": {
                    "200": {
                        "description": "Success"
                    }
                },
                "summary": "Deletes values from a ThreatList",
                "operationId": "delete_remove_value_from_threat_list",
                "parameters": [
                    {
                        "name": "payload",
                        "required": true,
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/ListValues"
                        }
                    }
                ],
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "tags": [
                    "Lists"
                ]
            }
        },
        "/observable/history/{value}": {
            "parameters": [
                {
                    "name": "value",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ],
            "get": {
                "responses": {
                    "200": {
                        "description": "Success"
                    }
                },
                "operationId": "get_observable_historical_data",
                "tags": [
                    "Observable"
                ]
            }
        },
        "/organization": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/PagedOrganizationList"
                        }
                    }
                },
                "operationId": "get_organization_list",
                "parameters": [
                    {
                        "name": "page_size",
                        "in": "query",
                        "type": "integer",
                        "default": 25
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "type": "integer",
                        "default": 1
                    },
                    {
                        "name": "sort_by",
                        "in": "query",
                        "type": "string",
                        "default": "created_at"
                    },
                    {
                        "name": "all",
                        "in": "query",
                        "type": "boolean",
                        "default": false
                    },
                    {
                        "name": "sort_direction",
                        "in": "query",
                        "type": "string",
                        "default": "desc"
                    },
                    {
                        "name": "X-Fields",
                        "in": "header",
                        "type": "string",
                        "format": "mask",
                        "description": "An optional fields mask"
                    }
                ],
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "tags": [
                    "Organizations"
                ]
            },
            "post": {
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/OrganizationList"
                        }
                    }
                },
                "summary": "Creates a new organization in the Reflex system",
                "description": "Requires information about the first user (admin) for that\norganization/tenant",
                "operationId": "post_organization_list",
                "parameters": [
                    {
                        "name": "payload",
                        "required": true,
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/CreateOrganization"
                        }
                    },
                    {
                        "name": "X-Fields",
                        "in": "header",
                        "type": "string",
                        "format": "mask",
                        "description": "An optional fields mask"
                    }
                ],
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "tags": [
                    "Organizations"
                ]
            }
        },
        "/organization/{uuid}": {
            "parameters": [
                {
                    "name": "uuid",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ],
            "get": {
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/OrganizationList"
                        }
                    }
                },
                "summary": "Returns the details about a single organization",
                "description": "Members of the default organization can see the details of any organization",
                "operationId": "get_organization_details",
                "parameters": [
                    {
                        "name": "X-Fields",
                        "in": "header",
                        "type": "string",
                        "format": "mask",
                        "description": "An optional fields mask"
                    }
                ],
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "tags": [
                    "Organizations"
                ]
            },
            "delete": {
                "responses": {
                    "200": {
                        "description": "Success"
                    }
                },
                "summary": "Deletes the organization from the platform",
                "description": "Only admins from the default organization with delete_organization \npermissions can perform this action",
                "operationId": "delete_organization_details",
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "tags": [
                    "Organizations"
                ]
            },
            "put": {
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/OrganizationList"
                        }
                    }
                },
                "summary": "Updates an organization",
                "description": "Only members of the default organization with update_organization permissions\ncan perform this action",
                "operationId": "put_organization_details",
                "parameters": [
                    {
                        "name": "payload",
                        "required": true,
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/CreateOrganization"
                        }
                    },
                    {
                        "name": "X-Fields",
                        "in": "header",
                        "type": "string",
                        "format": "mask",
                        "description": "An optional fields mask"
                    }
                ],
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "tags": [
                    "Organizations"
                ]
            }
        },
        "/playbook/": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Success"
                    }
                },
                "operationId": "get_playbook_list",
                "tags": [
                    "Playbook"
                ]
            },
            "post": {
                "responses": {
                    "200": {
                        "description": "Success"
                    }
                },
                "operationId": "post_playbook_list",
                "parameters": [
                    {
                        "name": "payload",
                        "required": true,
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/CreatePlaybook"
                        }
                    }
                ],
                "tags": [
                    "Playbook"
                ]
            }
        },
        "/plugin": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/PluginList"
                        }
                    }
                },
                "summary": "Retrieves a list of plugins",
                "operationId": "get_plugin_list",
                "parameters": [
                    {
                        "name": "X-Fields",
                        "in": "header",
                        "type": "string",
                        "format": "mask",
                        "description": "An optional fields mask"
                    }
                ],
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "tags": [
                    "Plugin"
                ]
            }
        },
        "/plugin/download/{path}": {
            "parameters": [
                {
                    "name": "path",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ],
            "get": {
                "responses": {
                    "200": {
                        "description": "Success"
                    }
                },
                "operationId": "get_download_plugin",
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "tags": [
                    "Plugin"
                ]
            }
        },
        "/plugin/upload": {
            "post": {
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/PluginList"
                            }
                        }
                    }
                },
                "summary": "Adds a new plugin to the system",
                "operationId": "post_plugin_upload",
                "parameters": [
                    {
                        "name": "files",
                        "in": "formData",
                        "type": "array",
                        "required": true,
                        "items": {
                            "type": "file"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "X-Fields",
                        "in": "header",
                        "type": "string",
                        "format": "mask",
                        "description": "An optional fields mask"
                    }
                ],
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "consumes": [
                    "application/x-www-form-urlencoded",
                    "multipart/form-data"
                ],
                "tags": [
                    "Plugin"
                ]
            }
        },
        "/plugin/{uuid}": {
            "parameters": [
                {
                    "name": "uuid",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ],
            "get": {
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/PluginList"
                        }
                    }
                },
                "summary": "Retrieves the details of a specific plugin",
                "operationId": "get_plugin_details",
                "parameters": [
                    {
                        "name": "X-Fields",
                        "in": "header",
                        "type": "string",
                        "format": "mask",
                        "description": "An optional fields mask"
                    }
                ],
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "tags": [
                    "Plugin"
                ]
            }
        },
        "/role": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/RolesPaged"
                        }
                    }
                },
                "summary": "Returns a list of Roles",
                "operationId": "get_role_list",
                "parameters": [
                    {
                        "name": "organization",
                        "in": "query",
                        "type": "string"
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "type": "integer",
                        "default": 1
                    },
                    {
                        "name": "page_size",
                        "in": "query",
                        "type": "integer",
                        "default": 10
                    },
                    {
                        "name": "sort_by",
                        "in": "query",
                        "type": "string",
                        "default": "created_at"
                    },
                    {
                        "name": "sort_direction",
                        "in": "query",
                        "type": "string",
                        "default": "desc"
                    },
                    {
                        "name": "X-Fields",
                        "in": "header",
                        "type": "string",
                        "format": "mask",
                        "description": "An optional fields mask"
                    }
                ],
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "tags": [
                    "Roles"
                ]
            },
            "post": {
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/Role"
                        }
                    },
                    "409": {
                        "description": "Role already exists."
                    }
                },
                "summary": "Creates a new Role",
                "operationId": "post_role_list",
                "parameters": [
                    {
                        "name": "payload",
                        "required": true,
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/RoleCreate"
                        }
                    },
                    {
                        "name": "X-Fields",
                        "in": "header",
                        "type": "string",
                        "format": "mask",
                        "description": "An optional fields mask"
                    }
                ],
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "tags": [
                    "Roles"
                ]
            }
        },
        "/role/{uuid}": {
            "parameters": [
                {
                    "name": "uuid",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ],
            "get": {
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/Role"
                        }
                    }
                },
                "summary": "Gets the details of a Role",
                "operationId": "get_role_details",
                "parameters": [
                    {
                        "name": "X-Fields",
                        "in": "header",
                        "type": "string",
                        "format": "mask",
                        "description": "An optional fields mask"
                    }
                ],
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "tags": [
                    "Roles"
                ]
            },
            "delete": {
                "responses": {
                    "200": {
                        "description": "Success"
                    }
                },
                "summary": "Removes a Role",
                "operationId": "delete_role_details",
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "tags": [
                    "Roles"
                ]
            },
            "put": {
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/Role"
                        }
                    }
                },
                "summary": "Updates an Role",
                "operationId": "put_role_details",
                "parameters": [
                    {
                        "name": "payload",
                        "required": true,
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/RoleCreate"
                        }
                    },
                    {
                        "name": "X-Fields",
                        "in": "header",
                        "type": "string",
                        "format": "mask",
                        "description": "An optional fields mask"
                    }
                ],
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "tags": [
                    "Roles"
                ]
            }
        },
        "/settings": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/SettingsList"
                        }
                    }
                },
                "summary": "Retrieves the global settings for the system",
                "operationId": "get_global_settings",
                "parameters": [
                    {
                        "name": "organization",
                        "in": "query",
                        "type": "string"
                    },
                    {
                        "name": "X-Fields",
                        "in": "header",
                        "type": "string",
                        "format": "mask",
                        "description": "An optional fields mask"
                    }
                ],
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "tags": [
                    "Settings"
                ]
            },
            "put": {
                "responses": {
                    "200": {
                        "description": "Success"
                    }
                },
                "operationId": "put_global_settings",
                "parameters": [
                    {
                        "name": "payload",
                        "required": true,
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/SettingsList"
                        }
                    }
                ],
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "tags": [
                    "Settings"
                ]
            }
        },
        "/settings/backup": {
            "post": {
                "responses": {
                    "200": {
                        "description": "Success"
                    }
                },
                "summary": "Backs up all the data from the platform into a compressed archive",
                "description": "containing a JSON file for each index",
                "operationId": "post_backup_data",
                "parameters": [
                    {
                        "name": "payload",
                        "required": true,
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/CreateBackup"
                        }
                    }
                ],
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "tags": [
                    "Settings"
                ]
            }
        },
        "/settings/generate_persistent_pairing_token": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/PeristentPairingToken"
                        }
                    }
                },
                "summary": "Returns a new API key for the user making the request",
                "operationId": "get_persistent_pairing_token",
                "parameters": [
                    {
                        "name": "organization",
                        "in": "query",
                        "type": "string"
                    },
                    {
                        "name": "X-Fields",
                        "in": "header",
                        "type": "string",
                        "format": "mask",
                        "description": "An optional fields mask"
                    }
                ],
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "tags": [
                    "Settings"
                ]
            }
        },
        "/tag": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/TagList"
                            }
                        }
                    }
                },
                "summary": "Gets a list of tags",
                "operationId": "get_tag_list",
                "parameters": [
                    {
                        "name": "X-Fields",
                        "in": "header",
                        "type": "string",
                        "format": "mask",
                        "description": "An optional fields mask"
                    }
                ],
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "tags": [
                    "Tag"
                ]
            },
            "post": {
                "responses": {
                    "200": {
                        "description": "Successfully created the tag."
                    },
                    "409": {
                        "description": "Tag already exists."
                    }
                },
                "summary": "Creates a new tag",
                "operationId": "post_tag_list",
                "parameters": [
                    {
                        "name": "payload",
                        "required": true,
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/Tag"
                        }
                    }
                ],
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "tags": [
                    "Tag"
                ]
            }
        },
        "/task": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/TaskList"
                        }
                    }
                },
                "operationId": "get_tasklist",
                "parameters": [
                    {
                        "name": "uuid",
                        "in": "query",
                        "type": "string"
                    },
                    {
                        "name": "complete",
                        "in": "query",
                        "type": "boolean"
                    },
                    {
                        "name": "broadcast",
                        "in": "query",
                        "type": "boolean"
                    },
                    {
                        "name": "X-Fields",
                        "in": "header",
                        "type": "string",
                        "format": "mask",
                        "description": "An optional fields mask"
                    }
                ],
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "tags": [
                    "Task"
                ]
            }
        },
        "/user": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/UserListPaged"
                            }
                        }
                    }
                },
                "summary": "Returns a list of users",
                "operationId": "get_user_list",
                "parameters": [
                    {
                        "name": "username",
                        "in": "query",
                        "type": "string"
                    },
                    {
                        "name": "organization",
                        "in": "query",
                        "type": "string"
                    },
                    {
                        "name": "deleted",
                        "in": "query",
                        "type": "boolean",
                        "default": false
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "type": "integer",
                        "default": 1
                    },
                    {
                        "name": "page_size",
                        "in": "query",
                        "type": "integer",
                        "default": 10
                    },
                    {
                        "name": "sort_by",
                        "in": "query",
                        "type": "string",
                        "default": "created_at"
                    },
                    {
                        "name": "sort_direction",
                        "in": "query",
                        "type": "string",
                        "default": "desc"
                    },
                    {
                        "name": "X-Fields",
                        "in": "header",
                        "type": "string",
                        "format": "mask",
                        "description": "An optional fields mask"
                    }
                ],
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "tags": [
                    "User"
                ]
            },
            "post": {
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/UserCreateSuccess"
                        }
                    },
                    "409": {
                        "description": "User already exists."
                    }
                },
                "summary": "Creates a new user",
                "operationId": "post_user_list",
                "parameters": [
                    {
                        "name": "payload",
                        "required": true,
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/UserCreate"
                        }
                    },
                    {
                        "name": "X-Fields",
                        "in": "header",
                        "type": "string",
                        "format": "mask",
                        "description": "An optional fields mask"
                    }
                ],
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "tags": [
                    "User"
                ]
            }
        },
        "/user/disable_mfa": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Success"
                    }
                },
                "summary": "Enables MFA for the current user",
                "operationId": "get_user_disable_mfa",
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "tags": [
                    "User"
                ]
            }
        },
        "/user/enable_mfa": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Success"
                    }
                },
                "summary": "Enables MFA for the current user",
                "operationId": "get_user_enable_mfa",
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "tags": [
                    "User"
                ]
            }
        },
        "/user/generate_api_key": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/UserApiKey"
                        }
                    }
                },
                "summary": "Returns a new API key for the user making the request",
                "operationId": "get_user_generate_api_key",
                "parameters": [
                    {
                        "name": "X-Fields",
                        "in": "header",
                        "type": "string",
                        "format": "mask",
                        "description": "An optional fields mask"
                    }
                ],
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "tags": [
                    "User"
                ]
            }
        },
        "/user/generate_mfa_qr": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Success"
                    }
                },
                "summary": "Returns a QR code that the user can use to add MFA this account",
                "operationId": "get_user_generate_mfa_qr",
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "tags": [
                    "User"
                ]
            }
        },
        "/user/me": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/UserSelf"
                        }
                    }
                },
                "summary": "Returns information about the currently logged in user",
                "operationId": "get_user_info",
                "parameters": [
                    {
                        "name": "X-Fields",
                        "in": "header",
                        "type": "string",
                        "format": "mask",
                        "description": "An optional fields mask"
                    }
                ],
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "tags": [
                    "User"
                ]
            }
        },
        "/user/toggle_mfa": {
            "put": {
                "responses": {
                    "200": {
                        "description": "Success"
                    }
                },
                "summary": "Enables or disables MFA for multiple users",
                "operationId": "put_toggle_mfa",
                "parameters": [
                    {
                        "name": "payload",
                        "required": true,
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/UserUUIDs"
                        }
                    }
                ],
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "tags": [
                    "User"
                ]
            }
        },
        "/user/validate_mfa_setup": {
            "post": {
                "responses": {
                    "200": {
                        "description": "Success"
                    }
                },
                "summary": "Checks to see if the user has successfully completed the MFA setup",
                "description": "by verifying the first TOTP given by their authenticator app",
                "operationId": "post_user_validate_mfa_setup",
                "parameters": [
                    {
                        "name": "payload",
                        "required": true,
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/MFATOTP"
                        }
                    }
                ],
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "tags": [
                    "User"
                ]
            }
        },
        "/user/{uuid}": {
            "parameters": [
                {
                    "name": "uuid",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ],
            "get": {
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/UserFull"
                        }
                    }
                },
                "summary": "Returns information about a user",
                "operationId": "get_user_details",
                "parameters": [
                    {
                        "name": "X-Fields",
                        "in": "header",
                        "type": "string",
                        "format": "mask",
                        "description": "An optional fields mask"
                    }
                ],
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "tags": [
                    "User"
                ]
            },
            "delete": {
                "responses": {
                    "200": {
                        "description": "Success"
                    }
                },
                "summary": "Deletes a user ",
                "description": "Users are soft deleted, meaning they never get removed from the database.  Instead,\ntheir deleted attribute is set and they do not show up in the UI.  This is \nused to preserve database relationships like ownership, comment history.\nDeleted users can not be restored at this time.",
                "operationId": "delete_user_details",
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "tags": [
                    "User"
                ]
            },
            "put": {
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/UserFull"
                        }
                    }
                },
                "summary": "Updates information for a user",
                "operationId": "put_user_details",
                "parameters": [
                    {
                        "name": "payload",
                        "required": true,
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/UserCreate"
                        }
                    },
                    {
                        "name": "X-Fields",
                        "in": "header",
                        "type": "string",
                        "format": "mask",
                        "description": "An optional fields mask"
                    }
                ],
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "tags": [
                    "User"
                ]
            }
        },
        "/user/{uuid}/unlock": {
            "parameters": [
                {
                    "name": "uuid",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ],
            "put": {
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/UserFull"
                        }
                    }
                },
                "summary": "Unlocks a user and resets their failed logons back to 0",
                "operationId": "put_unlock_user",
                "parameters": [
                    {
                        "name": "X-Fields",
                        "in": "header",
                        "type": "string",
                        "format": "mask",
                        "description": "An optional fields mask"
                    }
                ],
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "tags": [
                    "User"
                ]
            }
        }
    },
    "info": {
        "title": "Reflex SOAR",
        "version": "2.0",
        "description": "A Security Orchestration and Automation Platform"
    },
    "produces": [
        "application/json"
    ],
    "consumes": [
        "application/json"
    ],
    "securityDefinitions": {
        "Bearer": {
            "type": "apiKey",
            "in": "header",
            "name": "Authorization"
        }
    },
    "tags": [
        {
            "name": "User",
            "description": "User operations"
        },
        {
            "name": "Settings",
            "description": "Settings operations"
        },
        {
            "name": "Credential",
            "description": "Credential operations"
        },
        {
            "name": "Input",
            "description": "Input operations"
        },
        {
            "name": "Agent",
            "description": "Agent operations"
        },
        {
            "name": "AgentGroup",
            "description": "Agent Group operations"
        },
        {
            "name": "DataType",
            "description": "DataType operations"
        },
        {
            "name": "Case",
            "description": "Case operations"
        },
        {
            "name": "CaseStatus",
            "description": "Case Status operations"
        },
        {
            "name": "CaseComment",
            "description": "Case Comments"
        },
        {
            "name": "CaseTask",
            "description": "Case Tasks"
        },
        {
            "name": "CaseHistory",
            "description": "Case history operations"
        },
        {
            "name": "CaseTemplate",
            "description": "Case Template operations"
        },
        {
            "name": "CloseReason",
            "description": "Closure reason are used when closing a case and can be customized"
        },
        {
            "name": "Tag",
            "description": "Tag operations"
        },
        {
            "name": "Dashboard",
            "description": "API endpoints that drive dashboard display"
        },
        {
            "name": "Plugin",
            "description": "Plugin operations"
        },
        {
            "name": "Observable",
            "description": "Observable operations"
        },
        {
            "name": "Hunting",
            "description": "Threat hunting operaitons"
        },
        {
            "name": "Playbook",
            "description": "Playbook operaitons"
        },
        {
            "name": "AuditLog",
            "description": "Reflex audit logs"
        },
        {
            "name": "Lists",
            "description": "Intel List operations"
        },
        {
            "name": "Organizations",
            "description": "Organization operations"
        },
        {
            "name": "Events",
            "description": "Event related operations"
        },
        {
            "name": "Auth",
            "description": "Authentication operations"
        },
        {
            "name": "EventRule",
            "description": "Event Rules control what happens to an event on ingest"
        },
        {
            "name": "Roles",
            "description": "Role operations"
        },
        {
            "name": "Task",
            "description": "Task operations"
        }
    ],
    "definitions": {
        "UserSelf": {
            "properties": {
                "uuid": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                },
                "first_name": {
                    "type": "string"
                },
                "last_name": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "role": {
                    "$ref": "#/definitions/UserRole"
                },
                "mfa_enabled": {
                    "type": "boolean"
                },
                "organization": {
                    "type": "string"
                },
                "default_org": {
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "UserRole": {
            "properties": {
                "uuid": {
                    "type": "string"
                },
                "permissions": {
                    "$ref": "#/definitions/Permissions"
                },
                "name": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "Permissions": {
            "properties": {
                "add_user": {
                    "type": "boolean"
                },
                "update_user": {
                    "type": "boolean"
                },
                "delete_user": {
                    "type": "boolean"
                },
                "add_user_to_role": {
                    "type": "boolean"
                },
                "remove_user_from_role": {
                    "type": "boolean"
                },
                "reset_user_password": {
                    "type": "boolean"
                },
                "unlock_user": {
                    "type": "boolean"
                },
                "view_users": {
                    "type": "boolean"
                },
                "add_role": {
                    "type": "boolean"
                },
                "update_role": {
                    "type": "boolean"
                },
                "delete_role": {
                    "type": "boolean"
                },
                "set_role_permissions": {
                    "type": "boolean"
                },
                "view_roles": {
                    "type": "boolean"
                },
                "create_user_group": {
                    "type": "boolean"
                },
                "view_user_groups": {
                    "type": "boolean"
                },
                "update_user_groups": {
                    "type": "boolean"
                },
                "delete_user_group": {
                    "type": "boolean"
                },
                "create_event_rule": {
                    "type": "boolean"
                },
                "add_event": {
                    "type": "boolean"
                },
                "view_events": {
                    "type": "boolean"
                },
                "view_case_events": {
                    "type": "boolean"
                },
                "update_event": {
                    "type": "boolean"
                },
                "delete_event": {
                    "type": "boolean"
                },
                "view_event_rules": {
                    "type": "boolean"
                },
                "update_event_rule": {
                    "type": "boolean"
                },
                "delete_event_rule": {
                    "type": "boolean"
                },
                "add_observable": {
                    "type": "boolean"
                },
                "update_observable": {
                    "type": "boolean"
                },
                "delete_observable": {
                    "type": "boolean"
                },
                "add_tag_to_observable": {
                    "type": "boolean"
                },
                "remove_tag_from_observable": {
                    "type": "boolean"
                },
                "add_playbook": {
                    "type": "boolean"
                },
                "update_playbook": {
                    "type": "boolean"
                },
                "delete_playbook": {
                    "type": "boolean"
                },
                "view_playbooks": {
                    "type": "boolean"
                },
                "add_tag_to_playbook": {
                    "type": "boolean"
                },
                "remove_tag_from_playbook": {
                    "type": "boolean"
                },
                "view_agents": {
                    "type": "boolean"
                },
                "update_agent": {
                    "type": "boolean"
                },
                "delete_agent": {
                    "type": "boolean"
                },
                "pair_agent": {
                    "type": "boolean"
                },
                "add_agent_group": {
                    "type": "boolean"
                },
                "view_agent_groups": {
                    "type": "boolean"
                },
                "update_agent_group": {
                    "type": "boolean"
                },
                "delete_agent_group": {
                    "type": "boolean"
                },
                "add_input": {
                    "type": "boolean"
                },
                "view_inputs": {
                    "type": "boolean"
                },
                "update_input": {
                    "type": "boolean"
                },
                "delete_input": {
                    "type": "boolean"
                },
                "add_tag": {
                    "type": "boolean"
                },
                "update_tag": {
                    "type": "boolean"
                },
                "delete_tag": {
                    "type": "boolean"
                },
                "view_tags": {
                    "type": "boolean"
                },
                "create_case": {
                    "type": "boolean"
                },
                "view_cases": {
                    "type": "boolean"
                },
                "update_case": {
                    "type": "boolean"
                },
                "delete_case": {
                    "type": "boolean"
                },
                "upload_case_files": {
                    "type": "boolean"
                },
                "view_case_files": {
                    "type": "boolean"
                },
                "delete_case_files": {
                    "type": "boolean"
                },
                "create_case_task": {
                    "type": "boolean"
                },
                "view_case_tasks": {
                    "type": "boolean"
                },
                "update_case_task": {
                    "type": "boolean"
                },
                "delete_case_task": {
                    "type": "boolean"
                },
                "create_case_template": {
                    "type": "boolean"
                },
                "view_case_templates": {
                    "type": "boolean"
                },
                "update_case_template": {
                    "type": "boolean"
                },
                "delete_case_template": {
                    "type": "boolean"
                },
                "create_case_template_task": {
                    "type": "boolean"
                },
                "view_case_template_tasks": {
                    "type": "boolean"
                },
                "update_case_template_task": {
                    "type": "boolean"
                },
                "delete_case_template_task": {
                    "type": "boolean"
                },
                "create_case_comment": {
                    "type": "boolean"
                },
                "view_case_comments": {
                    "type": "boolean"
                },
                "update_case_comment": {
                    "type": "boolean"
                },
                "delete_case_comment": {
                    "type": "boolean"
                },
                "create_case_status": {
                    "type": "boolean"
                },
                "update_case_status": {
                    "type": "boolean"
                },
                "delete_case_status": {
                    "type": "boolean"
                },
                "view_plugins": {
                    "type": "boolean"
                },
                "create_plugin": {
                    "type": "boolean"
                },
                "delete_plugin": {
                    "type": "boolean"
                },
                "update_plugin": {
                    "type": "boolean"
                },
                "add_credential": {
                    "type": "boolean"
                },
                "update_credential": {
                    "type": "boolean"
                },
                "decrypt_credential": {
                    "type": "boolean"
                },
                "delete_credential": {
                    "type": "boolean"
                },
                "view_credentials": {
                    "type": "boolean"
                },
                "add_organization": {
                    "type": "boolean"
                },
                "view_organizations": {
                    "type": "boolean"
                },
                "update_organization": {
                    "type": "boolean"
                },
                "delete_organization": {
                    "type": "boolean"
                },
                "add_list": {
                    "type": "boolean"
                },
                "update_list": {
                    "type": "boolean"
                },
                "view_lists": {
                    "type": "boolean"
                },
                "delete_list": {
                    "type": "boolean"
                },
                "create_data_type": {
                    "type": "boolean"
                },
                "update_data_type": {
                    "type": "boolean"
                },
                "update_settings": {
                    "type": "boolean"
                },
                "view_settings": {
                    "type": "boolean"
                },
                "create_persistent_pairing_token": {
                    "type": "boolean"
                },
                "use_api": {
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "UserApiKey": {
            "properties": {
                "api_key": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "MFATOTP": {
            "properties": {
                "token": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "UserUUIDs": {
            "properties": {
                "users": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "mfa_enabled": {
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "UserFull": {
            "properties": {
                "uuid": {
                    "type": "string"
                },
                "organization": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "first_name": {
                    "type": "string"
                },
                "last_name": {
                    "type": "string"
                },
                "last_logon": {
                    "type": "object"
                },
                "locked": {
                    "type": "boolean"
                },
                "mfa_enabled": {
                    "type": "boolean"
                },
                "failed_logons": {
                    "type": "integer"
                },
                "disabled": {
                    "type": "boolean"
                },
                "created_at": {
                    "type": "object"
                },
                "updated_at": {
                    "type": "object"
                },
                "role": {
                    "$ref": "#/definitions/UserRoleNoPerms"
                }
            },
            "type": "object"
        },
        "UserRoleNoPerms": {
            "properties": {
                "uuid": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "UserCreate": {
            "properties": {
                "username": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "first_name": {
                    "type": "string"
                },
                "last_name": {
                    "type": "string"
                },
                "locked": {
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "UserListPaged": {
            "properties": {
                "users": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/UserFull"
                    }
                },
                "pagination": {
                    "$ref": "#/definitions/Pagination"
                }
            },
            "type": "object"
        },
        "Pagination": {
            "properties": {
                "total_results": {
                    "type": "integer"
                },
                "pages": {
                    "type": "integer"
                },
                "page_size": {
                    "type": "integer"
                },
                "page": {
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "UserCreateSuccess": {
            "properties": {
                "message": {
                    "type": "string"
                },
                "user": {
                    "$ref": "#/definitions/UserFull"
                }
            },
            "type": "object"
        },
        "SettingsList": {
            "properties": {
                "base_url": {
                    "type": "string"
                },
                "require_case_templates": {
                    "type": "boolean"
                },
                "allow_comment_deletion": {
                    "type": "boolean"
                },
                "email_from": {
                    "type": "string"
                },
                "email_server": {
                    "type": "string"
                },
                "email_secret_uuid": {
                    "type": "string"
                },
                "playbook_action_timeout": {
                    "type": "integer"
                },
                "playbook_timeout": {
                    "type": "integer"
                },
                "logon_password_attempts": {
                    "type": "integer"
                },
                "api_key_valid_days": {
                    "type": "integer"
                },
                "agent_pairing_token_valid_minutes": {
                    "type": "integer"
                },
                "persistent_pairing_token": {
                    "type": "string"
                },
                "require_event_dismiss_comment": {
                    "type": "boolean"
                },
                "require_case_close_comment": {
                    "type": "boolean"
                },
                "allow_event_deletion": {
                    "type": "boolean"
                },
                "assign_case_on_create": {
                    "type": "boolean"
                },
                "assign_task_on_start": {
                    "type": "boolean"
                },
                "allow_comment_editing": {
                    "type": "boolean"
                },
                "events_page_refresh": {
                    "type": "integer"
                },
                "events_per_page": {
                    "type": "integer"
                },
                "data_types": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "require_approved_ips": {
                    "type": "boolean"
                },
                "approved_ips": {
                    "type": "object"
                },
                "require_mfa": {
                    "type": "boolean"
                },
                "minimum_password_length": {
                    "type": "integer"
                },
                "enforce_password_complexity": {
                    "type": "boolean"
                },
                "disallowed_password_keywords": {
                    "type": "object"
                }
            },
            "type": "object"
        },
        "CreateBackup": {
            "properties": {
                "password": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "PeristentPairingToken": {
            "properties": {
                "token": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "CredentialCreate": {
            "required": [
                "description",
                "name",
                "secret",
                "username"
            ],
            "properties": {
                "username": {
                    "type": "string"
                },
                "secret": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "Credential": {
            "properties": {
                "uuid": {
                    "type": "string"
                },
                "organization": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "CredentialListPaged": {
            "properties": {
                "credentials": {
                    "$ref": "#/definitions/CredentialLIst"
                },
                "pagination": {
                    "$ref": "#/definitions/Pagination"
                }
            },
            "type": "object"
        },
        "CredentialLIst": {
            "properties": {
                "uuid": {
                    "type": "string"
                },
                "organization": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "CredentialReturn": {
            "properties": {
                "secret": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "CredentialUpdate": {
            "properties": {
                "username": {
                    "type": "string"
                },
                "secret": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "organization": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "CreateInput": {
            "required": [
                "credential"
            ],
            "properties": {
                "name": {
                    "type": "string"
                },
                "organization": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "plugin": {
                    "type": "string"
                },
                "enabled": {
                    "type": "boolean"
                },
                "credential": {
                    "type": "string"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "config": {
                    "type": "string"
                },
                "field_mapping": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "InputListPaged": {
            "properties": {
                "inputs": {
                    "$ref": "#/definitions/InputList"
                },
                "pagination": {
                    "$ref": "#/definitions/Pagination"
                }
            },
            "type": "object"
        },
        "InputList": {
            "properties": {
                "uuid": {
                    "type": "string"
                },
                "organization": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "plugin": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "enabled": {
                    "type": "boolean"
                },
                "credential": {
                    "type": "string"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "config": {
                    "type": "object"
                },
                "field_mapping": {
                    "type": "object"
                },
                "created_at": {
                    "type": "object"
                },
                "updated_at": {
                    "type": "object"
                }
            },
            "type": "object"
        },
        "AgentCreate": {
            "properties": {
                "name": {
                    "type": "string"
                },
                "roles": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "groups": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "ip_address": {
                    "type": "string"
                },
                "inputs": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "type": "object"
        },
        "AgentListPaged": {
            "properties": {
                "agents": {
                    "$ref": "#/definitions/AgentList"
                },
                "pagination": {
                    "$ref": "#/definitions/Pagination"
                }
            },
            "type": "object"
        },
        "AgentList": {
            "properties": {
                "uuid": {
                    "type": "string"
                },
                "organization": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "inputs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/InputList"
                    }
                },
                "roles": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "groups": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/AgentGroupList"
                    }
                },
                "active": {
                    "type": "boolean"
                },
                "ip_address": {
                    "type": "string"
                },
                "last_heartbeat": {
                    "type": "object"
                }
            },
            "type": "object"
        },
        "AgentGroupList": {
            "properties": {
                "uuid": {
                    "type": "string"
                },
                "organization": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "inputs": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "type": "object"
        },
        "AgentGroupListPaged": {
            "properties": {
                "groups": {
                    "$ref": "#/definitions/AgentGroupList"
                },
                "pagination": {
                    "$ref": "#/definitions/Pagination"
                }
            },
            "type": "object"
        },
        "PagedAgentGroupList": {
            "properties": {
                "groups": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/AgentGroupList"
                    }
                },
                "pagination": {
                    "$ref": "#/definitions/Pagination"
                }
            },
            "type": "object"
        },
        "CreateDataType": {
            "properties": {
                "name": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "regex": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "DataTypeList": {
            "properties": {
                "uuid": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "regex": {
                    "type": "string"
                },
                "created_at": {
                    "type": "object"
                },
                "updated_at": {
                    "type": "object"
                }
            },
            "type": "object"
        },
        "CaseCreate": {
            "required": [
                "description",
                "severity",
                "title",
                "tlp"
            ],
            "properties": {
                "title": {
                    "type": "string"
                },
                "owner_uuid": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "tlp": {
                    "type": "integer"
                },
                "severity": {
                    "type": "integer"
                },
                "observables": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "events": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "case_template_uuid": {
                    "type": "string"
                },
                "include_related_events": {
                    "type": "boolean"
                },
                "generate_event_rule": {
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "PagedCaseList": {
            "properties": {
                "cases": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/CaseList"
                    }
                },
                "pagination": {
                    "$ref": "#/definitions/Pagination"
                }
            },
            "type": "object"
        },
        "CaseList": {
            "properties": {
                "uuid": {
                    "type": "string"
                },
                "organization": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                },
                "owner": {
                    "$ref": "#/definitions/UserList"
                },
                "tlp": {
                    "type": "integer"
                },
                "severity": {
                    "type": "integer"
                },
                "status": {
                    "$ref": "#/definitions/CaseStatusString"
                },
                "event_count": {
                    "type": "object"
                },
                "created_at": {
                    "type": "object"
                },
                "updated_at": {
                    "type": "object"
                },
                "case_template_uuid": {
                    "type": "string"
                },
                "escalated": {
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "UserList": {
            "properties": {
                "username": {
                    "type": "string"
                },
                "uuid": {
                    "type": "string"
                },
                "organization": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "CaseStatusString": {
            "properties": {
                "uuid": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "closed": {
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "CaseDetails": {
            "properties": {
                "uuid": {
                    "type": "string"
                },
                "organization": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                },
                "owner": {
                    "$ref": "#/definitions/UserList"
                },
                "description": {
                    "type": "string"
                },
                "tags": {
                    "type": "object"
                },
                "tlp": {
                    "type": "integer"
                },
                "severity": {
                    "type": "integer"
                },
                "status": {
                    "$ref": "#/definitions/CaseStatusString"
                },
                "event_count": {
                    "type": "object"
                },
                "related_cases": {
                    "type": "object"
                },
                "open_tasks": {
                    "type": "integer"
                },
                "total_tasks": {
                    "type": "integer"
                },
                "case_template_uuid": {
                    "type": "string"
                },
                "created_at": {
                    "type": "object"
                },
                "updated_at": {
                    "type": "object"
                },
                "created_by": {
                    "$ref": "#/definitions/UserList"
                },
                "updated_by": {
                    "$ref": "#/definitions/UserList"
                },
                "observable_count": {
                    "type": "object"
                },
                "escalated": {
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "AddEventsToCase": {
            "properties": {
                "include_related_events": {
                    "type": "boolean"
                },
                "events": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "type": "object"
        },
        "AddEventsToCaseResponse": {
            "properties": {
                "results": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ResponseMessage"
                    }
                },
                "success": {
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "ResponseMessage": {
            "properties": {
                "message": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "PagedObservableList": {
            "properties": {
                "observables": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ObservableList"
                    }
                },
                "pagination": {
                    "$ref": "#/definitions/Pagination"
                }
            },
            "type": "object"
        },
        "ObservableList": {
            "properties": {
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "value": {
                    "type": "string"
                },
                "ioc": {
                    "type": "boolean"
                },
                "tlp": {
                    "type": "integer"
                },
                "spotted": {
                    "type": "boolean"
                },
                "safe": {
                    "type": "boolean"
                },
                "data_type": {
                    "type": "string"
                },
                "uuid": {
                    "type": "string"
                },
                "case": {
                    "type": "string"
                },
                "source_field": {
                    "type": "string"
                },
                "original_source_field": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "ObservableUpdate": {
            "properties": {
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "ioc": {
                    "type": "boolean"
                },
                "tlp": {
                    "type": "integer"
                },
                "spotted": {
                    "type": "boolean"
                },
                "safe": {
                    "type": "boolean"
                },
                "data_type": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "BulkObservables": {
            "properties": {
                "observables": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ObservableCreate"
                    }
                },
                "organization": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "ObservableCreate": {
            "required": [
                "data_type",
                "value"
            ],
            "properties": {
                "value": {
                    "type": "string"
                },
                "ioc": {
                    "type": "boolean"
                },
                "tlp": {
                    "type": "integer"
                },
                "spotted": {
                    "type": "boolean"
                },
                "safe": {
                    "type": "boolean"
                },
                "data_type": {
                    "type": "string"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "source_field": {
                    "type": "string"
                },
                "original_source_field": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "LinkCases": {
            "properties": {
                "cases": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "type": "object"
        },
        "RelatedCase": {
            "properties": {
                "id": {
                    "type": "integer"
                },
                "uuid": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                },
                "event_count": {
                    "type": "object"
                },
                "observable_count": {
                    "type": "object"
                },
                "owner": {
                    "$ref": "#/definitions/UserList"
                },
                "status": {
                    "$ref": "#/definitions/CaseStatusString"
                }
            },
            "type": "object"
        },
        "CaseStatusCreate": {
            "properties": {
                "name": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "CaseStatusList": {
            "properties": {
                "uuid": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "closed": {
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "CommentCreate": {
            "required": [
                "case_uuid",
                "message"
            ],
            "properties": {
                "case_uuid": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "CommentDetails": {
            "properties": {
                "uuid": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                },
                "edited": {
                    "type": "boolean"
                },
                "is_closure_comment": {
                    "type": "boolean"
                },
                "closure_reason": {
                    "$ref": "#/definitions/CaseCloseList"
                },
                "created_by": {
                    "$ref": "#/definitions/UserList"
                },
                "created_at": {
                    "type": "object"
                },
                "case_uuid": {
                    "type": "string"
                },
                "other_organization_name": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "CaseCloseList": {
            "properties": {
                "uuid": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "CaseTaskCreate": {
            "properties": {
                "title": {
                    "type": "string"
                },
                "order": {
                    "type": "integer"
                },
                "description": {
                    "type": "string"
                },
                "group_uuid": {
                    "type": "string"
                },
                "owner_uuid": {
                    "type": "string"
                },
                "case_uuid": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "CaseTaskList": {
            "properties": {
                "uuid": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "order": {
                    "type": "integer"
                },
                "created_at": {
                    "type": "object"
                },
                "updated_at": {
                    "type": "object"
                },
                "start_date": {
                    "type": "object"
                },
                "finish_date": {
                    "type": "object"
                },
                "owner": {
                    "$ref": "#/definitions/UserList"
                },
                "case": {
                    "type": "string"
                },
                "status": {
                    "type": "integer"
                },
                "from_template": {
                    "type": "boolean"
                },
                "notes": {
                    "$ref": "#/definitions/CaseTaskNoteDetails"
                }
            },
            "type": "object"
        },
        "CaseTaskNoteDetails": {
            "properties": {
                "note": {
                    "type": "string"
                },
                "created_by": {
                    "$ref": "#/definitions/UserList"
                },
                "created_at": {
                    "type": "object"
                }
            },
            "type": "object"
        },
        "CreateTaskNote": {
            "properties": {
                "note": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "CaseHistoryEntry": {
            "properties": {
                "message": {
                    "type": "string"
                },
                "created_at": {
                    "type": "object"
                },
                "created_by": {
                    "$ref": "#/definitions/UserList"
                }
            },
            "type": "object"
        },
        "CaseTemplateCreate": {
            "required": [
                "description",
                "title"
            ],
            "properties": {
                "title": {
                    "type": "string"
                },
                "organization": {
                    "type": "string"
                },
                "owner_uuid": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "tlp": {
                    "type": "integer"
                },
                "tasks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/CaseTemplateTaskCreate"
                    }
                },
                "severity": {
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "CaseTemplateTaskCreate": {
            "properties": {
                "title": {
                    "type": "string"
                },
                "order": {
                    "type": "integer"
                },
                "description": {
                    "type": "string"
                },
                "group_uuid": {
                    "type": "string"
                },
                "owner_uuid": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "CaseTemplateList": {
            "properties": {
                "uuid": {
                    "type": "string"
                },
                "organization": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "tags": {
                    "type": "object"
                },
                "tlp": {
                    "type": "integer"
                },
                "severity": {
                    "type": "integer"
                },
                "created_at": {
                    "type": "object"
                },
                "updated_at": {
                    "type": "object"
                },
                "tasks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/CaseTemplateTaskList"
                    }
                },
                "task_count": {
                    "type": "object"
                }
            },
            "type": "object"
        },
        "CaseTemplateTaskList": {
            "properties": {
                "uuid": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "order": {
                    "type": "integer"
                },
                "created_at": {
                    "type": "object"
                },
                "updated_at": {
                    "type": "object"
                },
                "status": {
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "CreateCloseReason": {
            "properties": {
                "title": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "CloseReasonList": {
            "properties": {
                "uuid": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "Tag": {
            "properties": {
                "name": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "TagList": {
            "properties": {
                "uuid": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "PluginList": {
            "properties": {
                "uuid": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "logo": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "enabled": {
                    "type": "boolean"
                },
                "manifest": {
                    "$ref": "#/definitions/PluginManifest"
                },
                "filename": {
                    "type": "string"
                },
                "file_hash": {
                    "type": "string"
                },
                "created_at": {
                    "type": "object"
                },
                "modified_at": {
                    "type": "object"
                },
                "configs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/PluginConfigList"
                    }
                }
            },
            "type": "object"
        },
        "PluginManifest": {
            "properties": {
                "actions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/PluginManifestAction"
                    }
                },
                "description": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "config_template": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "PluginManifestAction": {
            "properties": {
                "name": {
                    "type": "string"
                },
                "used_by": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "description": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "PluginConfigList": {
            "properties": {
                "name": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "plugin": {
                    "$ref": "#/definitions/PluginDetailsLimited"
                },
                "plugin_uuid": {
                    "type": "string"
                },
                "config": {
                    "type": "string"
                },
                "created_at": {
                    "type": "object"
                },
                "modified_at": {
                    "type": "object"
                }
            },
            "type": "object"
        },
        "PluginDetailsLimited": {
            "properties": {
                "name": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "CreatePlaybook": {
            "required": [
                "configuration",
                "name",
                "priority"
            ],
            "properties": {
                "name": {
                    "type": "string",
                    "description": "The name of the playbook"
                },
                "description": {
                    "type": "string",
                    "description": "An overview of what the playbook does"
                },
                "priority": {
                    "type": "integer",
                    "description": "What order to run this playbook in",
                    "default": 100
                },
                "configuration": {
                    "type": "string"
                },
                "enabled": {
                    "type": "boolean",
                    "description": "Is it enabled",
                    "default": true
                },
                "item_types": {
                    "type": "array",
                    "description": "What objects can this be run against",
                    "default": [
                        "event"
                    ],
                    "items": {
                        "type": "string"
                    }
                },
                "tags": {
                    "type": "array",
                    "description": "Helpful tags",
                    "default": [
                        "default"
                    ],
                    "items": {
                        "type": "string"
                    }
                }
            },
            "type": "object"
        },
        "AuditLogPagedList": {
            "properties": {
                "logs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/AuditLog"
                    }
                },
                "pagination": {
                    "$ref": "#/definitions/Pagination"
                }
            },
            "type": "object"
        },
        "AuditLog": {
            "properties": {
                "created_at": {
                    "type": "object"
                },
                "organization": {
                    "type": "string"
                },
                "event_type": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                },
                "source_user": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "event_reference": {
                    "type": "string"
                },
                "time_taken": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "ListCreate": {
            "required": [
                "data_type_uuid",
                "list_type",
                "name"
            ],
            "properties": {
                "name": {
                    "type": "string",
                    "example": "SpamHaus eDROP"
                },
                "organization": {
                    "type": "string"
                },
                "list_type": {
                    "type": "string",
                    "example": "values"
                },
                "tag_on_match": {
                    "type": "boolean",
                    "example": false
                },
                "data_type_uuid": {
                    "type": "string"
                },
                "values": {
                    "type": "string",
                    "example": "127.0.0.1\n4.4.4.4\n1.1.1.1"
                },
                "polling_interval": {
                    "type": "integer",
                    "example": 3600
                },
                "url": {
                    "type": "string",
                    "description": "A URL to pull threat data from",
                    "example": "https://www.spamhaus.org/drop/edrop.txt"
                },
                "active": {
                    "type": "boolean",
                    "example": true
                }
            },
            "type": "object"
        },
        "ListViewPaged": {
            "properties": {
                "lists": {
                    "$ref": "#/definitions/ListView"
                },
                "pagination": {
                    "$ref": "#/definitions/Pagination"
                }
            },
            "type": "object"
        },
        "ListView": {
            "properties": {
                "uuid": {
                    "type": "string"
                },
                "organization": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "list_type": {
                    "type": "string"
                },
                "tag_on_match": {
                    "type": "boolean"
                },
                "data_type": {
                    "$ref": "#/definitions/DataTypeList"
                },
                "url": {
                    "type": "string"
                },
                "poll_interval": {
                    "type": "integer"
                },
                "last_polled": {
                    "type": "object"
                },
                "values": {
                    "type": "object"
                },
                "active": {
                    "type": "boolean"
                },
                "value_count": {
                    "type": "object"
                },
                "created_at": {
                    "type": "object"
                },
                "updated_at": {
                    "type": "object"
                }
            },
            "type": "object"
        },
        "ListMatch": {
            "properties": {
                "name": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                },
                "matched": {
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "ListValuesPaged": {
            "properties": {
                "values": {
                    "$ref": "#/definitions/ThreatValue"
                },
                "pagination": {
                    "$ref": "#/definitions/Pagination"
                }
            },
            "type": "object"
        },
        "ThreatValue": {
            "properties": {
                "value": {
                    "type": "string"
                },
                "record_id": {
                    "type": "string"
                },
                "organization": {
                    "type": "string"
                },
                "from_poll": {
                    "type": "boolean"
                },
                "poll_interval": {
                    "type": "integer"
                },
                "key_field": {
                    "type": "string"
                },
                "data_type": {
                    "type": "string"
                },
                "list_uuid": {
                    "type": "string"
                },
                "list_name": {
                    "type": "string"
                },
                "created_at": {
                    "type": "object"
                }
            },
            "type": "object"
        },
        "ListValues": {
            "properties": {
                "values": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "type": "object"
        },
        "CreateOrganization": {
            "properties": {
                "name": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "url": {
                    "type": "string"
                },
                "logon_domains": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "admin_user": {
                    "$ref": "#/definitions/UserCreate"
                }
            },
            "type": "object"
        },
        "OrganizationList": {
            "properties": {
                "uuid": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "url": {
                    "type": "string"
                },
                "logon_domains": {
                    "type": "object"
                },
                "default_org": {
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "PagedOrganizationList": {
            "properties": {
                "organizations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/OrganizationList"
                    }
                },
                "pagination": {
                    "$ref": "#/definitions/Pagination"
                }
            },
            "type": "object"
        },
        "EventCreate": {
            "required": [
                "description",
                "reference",
                "title"
            ],
            "properties": {
                "title": {
                    "type": "string"
                },
                "reference": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "tlp": {
                    "type": "integer"
                },
                "severity": {
                    "type": "integer"
                },
                "source": {
                    "type": "string"
                },
                "signature": {
                    "type": "string"
                },
                "observables": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ObservableCreate"
                    }
                },
                "raw_log": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "PagedEventList": {
            "properties": {
                "events": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/EventList"
                    }
                },
                "observables": {
                    "type": "object"
                },
                "pagination": {
                    "$ref": "#/definitions/Pagination"
                }
            },
            "type": "object"
        },
        "EventList": {
            "required": [
                "description",
                "reference",
                "title"
            ],
            "properties": {
                "uuid": {
                    "type": "string"
                },
                "organization": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                },
                "reference": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "tlp": {
                    "type": "integer"
                },
                "severity": {
                    "type": "integer"
                },
                "status": {
                    "$ref": "#/definitions/EventStatusString"
                },
                "source": {
                    "type": "string"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "created_at": {
                    "type": "object"
                },
                "updated_at": {
                    "type": "object"
                },
                "case": {
                    "type": "string"
                },
                "signature": {
                    "type": "string"
                },
                "related_events_count": {
                    "type": "integer"
                },
                "raw_log": {
                    "$ref": "#/definitions/RawLog"
                }
            },
            "type": "object"
        },
        "EventStatusString": {
            "properties": {
                "name": {
                    "type": "string"
                },
                "closed": {
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "RawLog": {
            "properties": {
                "source_log": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "EventCreateBulk": {
            "properties": {
                "events": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/EventCreate"
                    }
                }
            },
            "type": "object"
        },
        "EventBulkDismissByFilter": {
            "properties": {
                "filter": {
                    "type": "string"
                },
                "dismiss_reason_uuid": {
                    "type": "string"
                },
                "dismiss_comment": {
                    "type": "string"
                },
                "uuids": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "type": "object"
        },
        "EventBulkDismiss": {
            "properties": {
                "events": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "dismiss_reason_uuid": {
                    "type": "string"
                },
                "dismiss_comment": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "EventDetails": {
            "required": [
                "description",
                "reference",
                "title"
            ],
            "properties": {
                "uuid": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                },
                "reference": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "tlp": {
                    "type": "integer"
                },
                "severity": {
                    "type": "integer"
                },
                "status": {
                    "$ref": "#/definitions/EventStatusString"
                },
                "source": {
                    "type": "string"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "observables": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ObservableList"
                    }
                },
                "observable_count": {
                    "type": "object"
                },
                "ioc_count": {
                    "type": "object"
                },
                "case": {
                    "type": "string"
                },
                "created_at": {
                    "type": "object"
                },
                "modified_at": {
                    "type": "object"
                },
                "raw_log": {
                    "type": "string"
                },
                "signature": {
                    "type": "string"
                },
                "dismiss_reason": {
                    "type": "string"
                },
                "dismiss_comment": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "BulkEventUUIDs": {
            "properties": {
                "events": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "organizations": {
                    "type": "object"
                }
            },
            "type": "object"
        },
        "RelatedEvents": {
            "properties": {
                "events": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "type": "object"
        },
        "MFAChallenge": {
            "properties": {
                "mfa_challenge_token": {
                    "type": "string"
                },
                "token": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "AuthSuccessToken": {
            "properties": {
                "access_token": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "AuthModel": {
            "properties": {
                "email": {
                    "type": "string",
                    "default": "admin@reflexsoar.com"
                },
                "password": {
                    "type": "string",
                    "default": "reflex"
                }
            },
            "type": "object"
        },
        "CreateEventRule": {
            "properties": {
                "name": {
                    "type": "string"
                },
                "organization": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "event_signature": {
                    "type": "string"
                },
                "merge_into_case": {
                    "type": "boolean"
                },
                "target_case_uuid": {
                    "type": "string"
                },
                "add_tags": {
                    "type": "boolean"
                },
                "tags_to_add": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "update_severity": {
                    "type": "boolean"
                },
                "target_severity": {
                    "type": "integer"
                },
                "mute_event": {
                    "type": "boolean"
                },
                "mute_period": {
                    "type": "integer"
                },
                "query": {
                    "type": "string"
                },
                "dismiss": {
                    "type": "boolean"
                },
                "dismiss_reason": {
                    "type": "string"
                },
                "dismiss_comment": {
                    "type": "string"
                },
                "expire": {
                    "type": "boolean"
                },
                "expire_days": {
                    "type": "integer"
                },
                "active": {
                    "type": "boolean"
                },
                "global_rule": {
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "PagedEventRuleList": {
            "properties": {
                "event_rules": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/EventRuleList"
                    }
                },
                "pagination": {
                    "$ref": "#/definitions/Pagination"
                }
            },
            "type": "object"
        },
        "EventRuleList": {
            "properties": {
                "uuid": {
                    "type": "string"
                },
                "organization": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "event_signature": {
                    "type": "string"
                },
                "dismiss_comment": {
                    "type": "string"
                },
                "dismiss_reason": {
                    "type": "string"
                },
                "rule_signature": {
                    "type": "string"
                },
                "merge_into_case": {
                    "type": "boolean"
                },
                "target_case_uuid": {
                    "type": "string"
                },
                "add_tags": {
                    "type": "boolean"
                },
                "tags_to_add": {
                    "type": "object"
                },
                "update_severity": {
                    "type": "boolean"
                },
                "target_severity": {
                    "type": "integer"
                },
                "mute_event": {
                    "type": "boolean"
                },
                "mute_period": {
                    "type": "integer"
                },
                "dismiss": {
                    "type": "boolean"
                },
                "expire": {
                    "type": "boolean"
                },
                "expire_days": {
                    "type": "integer"
                },
                "active": {
                    "type": "boolean"
                },
                "query": {
                    "type": "string"
                },
                "hits": {
                    "type": "integer"
                },
                "hits_last_24": {
                    "type": "integer"
                },
                "observables": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ShortObservableDetails"
                    }
                },
                "expire_at": {
                    "type": "object"
                },
                "created_at": {
                    "type": "object"
                },
                "updated_at": {
                    "type": "object"
                },
                "last_matched_date": {
                    "type": "object"
                },
                "global_rule": {
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "ShortObservableDetails": {
            "properties": {
                "uuid": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                },
                "data_type": {
                    "type": "string"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "source_field": {
                    "type": "string"
                },
                "original_source_field": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "TestEventRuleQuery": {
            "required": [
                "event_count",
                "organization",
                "query"
            ],
            "properties": {
                "query": {
                    "type": "string"
                },
                "organization": {
                    "type": "string"
                },
                "uuid": {
                    "type": "string"
                },
                "event_count": {
                    "type": "integer"
                },
                "return_results": {
                    "type": "boolean"
                },
                "start_date": {
                    "type": "string"
                },
                "end_date": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "RoleCreate": {
            "properties": {
                "name": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "permissions": {
                    "$ref": "#/definitions/Permissions"
                }
            },
            "type": "object"
        },
        "RolesPaged": {
            "properties": {
                "roles": {
                    "$ref": "#/definitions/Role"
                },
                "pagination": {
                    "$ref": "#/definitions/Pagination"
                }
            },
            "type": "object"
        },
        "Role": {
            "properties": {
                "uuid": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "members": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "permissions": {
                    "$ref": "#/definitions/Permissions"
                }
            },
            "type": "object"
        },
        "TaskList": {
            "properties": {
                "tasks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/TaskDetails"
                    }
                }
            },
            "type": "object"
        },
        "TaskDetails": {
            "properties": {
                "uuid": {
                    "type": "string"
                },
                "task_type": {
                    "type": "string"
                },
                "complete": {
                    "type": "boolean"
                },
                "started": {
                    "type": "boolean"
                },
                "start_date": {
                    "type": "object"
                },
                "end_date": {
                    "type": "object"
                },
                "elapsed_seconds": {
                    "type": "integer"
                },
                "broadcast": {
                    "type": "boolean"
                },
                "organization": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                },
                "created_by": {
                    "$ref": "#/definitions/UserList"
                }
            },
            "type": "object"
        }
    },
    "responses": {
        "ParseError": {
            "description": "When a mask can't be parsed"
        },
        "MaskError": {
            "description": "When any error occurs on mask"
        }
    }
}
